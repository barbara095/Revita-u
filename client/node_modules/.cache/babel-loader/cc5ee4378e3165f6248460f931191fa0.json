{"ast":null,"code":"import { Themer } from '../../../../themer';\nimport memoizeClassName from '../utils/memoizeClassName';\nimport scales from '../foundational-styles/scales';\nimport palette from '../foundational-styles/palette';\nvar InputAppearances = {};\nInputAppearances[\"default\"] = Themer.createInputAppearance({\n  base: {\n    backgroundColor: 'white',\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N5A, \", inset 0 1px 2px \").concat(scales.neutral.N4A)\n  },\n  invalid: {\n    boxShadow: \"inset 0 0 0 1px \".concat(palette.red.base, \", inset 0 1px 2px \").concat(scales.neutral.N4A)\n  },\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    boxShadow: \"inset 0 0 2px \".concat(scales.neutral.N4A, \", inset 0 0 0 1px \").concat(scales.blue.B7, \", 0 0 0 3px \").concat(scales.blue.B4A)\n  },\n  disabled: {\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n    backgroundColor: scales.neutral.N2\n  }\n});\nInputAppearances.neutral = Themer.createInputAppearance({\n  base: {\n    backgroundColor: scales.neutral.N2A\n  },\n  invalid: {\n    boxShadow: \"inset 0 0 0 1px \".concat(palette.red.base)\n  },\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    backgroundColor: 'white',\n    boxShadow: \"0 0 0 2px \".concat(scales.blue.B6A)\n  },\n  disabled: {\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n    backgroundColor: scales.neutral.N2\n  }\n});\nInputAppearances.none = Themer.createInputAppearance({\n  base: {\n    backgroundColor: 'white'\n  },\n  invalid: {},\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none'\n  },\n  disabled: {\n    backgroundColor: scales.neutral.N2\n  }\n});\n/**\n * Get the appearance of a `TextInput`.\n * @param {string} appearance - the appearance name\n * @return {Object} the appearance object.\n */\n\nvar getTextInputAppearance = function getTextInputAppearance(appearance) {\n  switch (appearance) {\n    case 'neutral':\n      return InputAppearances.neutral;\n\n    case 'none':\n      return InputAppearances.none;\n\n    default:\n      return InputAppearances[\"default\"];\n  }\n};\n/**\n * Get the className of a `TextInput`.\n * @param {string} appearance - the appearance name\n * @return {string} the appearance class name.\n */\n\n\nexport default memoizeClassName(getTextInputAppearance);","map":{"version":3,"sources":["../../../../../src/theme/src/default-theme/component-specific/getTextInputClassName.js"],"names":["InputAppearances","base","backgroundColor","boxShadow","scales","invalid","palette","placeholder","color","N6A","focus","outline","disabled","N2","N2A","getTextInputAppearance","memoizeClassName"],"mappings":"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","sourcesContent":["import { Themer } from '../../../../themer'\nimport memoizeClassName from '../utils/memoizeClassName'\nimport scales from '../foundational-styles/scales'\nimport palette from '../foundational-styles/palette'\n\nconst InputAppearances = {}\n\nInputAppearances.default = Themer.createInputAppearance({\n  base: {\n    backgroundColor: 'white',\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N5A}, inset 0 1px 2px ${\n      scales.neutral.N4A\n    }`\n  },\n  invalid: {\n    boxShadow: `inset 0 0 0 1px ${palette.red.base}, inset 0 1px 2px ${\n      scales.neutral.N4A\n    }`\n  },\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    boxShadow: `inset 0 0 2px ${scales.neutral.N4A}, inset 0 0 0 1px ${\n      scales.blue.B7\n    }, 0 0 0 3px ${scales.blue.B4A}`\n  },\n  disabled: {\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}`,\n    backgroundColor: scales.neutral.N2\n  }\n})\n\nInputAppearances.neutral = Themer.createInputAppearance({\n  base: {\n    backgroundColor: scales.neutral.N2A\n  },\n  invalid: {\n    boxShadow: `inset 0 0 0 1px ${palette.red.base}`\n  },\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none',\n    backgroundColor: 'white',\n    boxShadow: `0 0 0 2px ${scales.blue.B6A}`\n  },\n  disabled: {\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}`,\n    backgroundColor: scales.neutral.N2\n  }\n})\n\nInputAppearances.none = Themer.createInputAppearance({\n  base: {\n    backgroundColor: 'white'\n  },\n  invalid: {},\n  placeholder: {\n    color: scales.neutral.N6A\n  },\n  focus: {\n    outline: 'none'\n  },\n  disabled: {\n    backgroundColor: scales.neutral.N2\n  }\n})\n\n/**\n * Get the appearance of a `TextInput`.\n * @param {string} appearance - the appearance name\n * @return {Object} the appearance object.\n */\nconst getTextInputAppearance = appearance => {\n  switch (appearance) {\n    case 'neutral':\n      return InputAppearances.neutral\n    case 'none':\n      return InputAppearances.none\n    default:\n      return InputAppearances.default\n  }\n}\n\n/**\n * Get the className of a `TextInput`.\n * @param {string} appearance - the appearance name\n * @return {string} the appearance class name.\n */\nexport default memoizeClassName(getTextInputAppearance)\n"]},"metadata":{},"sourceType":"module"}