{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { Text } from '../../typography';\nimport { useTheme } from '../../theme';\nimport { useMergedRef } from '../../hooks';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar MinusIcon = function MinusIcon(_ref2) {\n  var _ref2$fill = _ref2.fill,\n      fill = _ref2$fill === void 0 ? 'currentColor' : _ref2$fill,\n      props = _objectWithoutProperties(_ref2, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n  }));\n};\n\nMinusIcon.displayName = \"MinusIcon\";\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar noop = function noop() {};\n\nvar Checkbox = memo(forwardRef(function Checkbox(props, forwardedRef) {\n  var id = props.id,\n      name = props.name,\n      label = props.label,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      disabled = props.disabled,\n      isInvalid = props.isInvalid,\n      _props$checked = props.checked,\n      checked = _props$checked === void 0 ? false : _props$checked,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? noop : _props$onChange,\n      value = props.value,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      rest = _objectWithoutProperties(props, [\"id\", \"name\", \"label\", \"appearance\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"indeterminate\"]);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n  var callbackRef = useMergedRef(setRef, forwardedRef);\n  useEffect(function () {\n    if (ref) {\n      ref.indeterminate = indeterminate;\n    }\n  }, [ref, indeterminate]);\n  var theme = useTheme();\n  var themedClassName = theme.getCheckboxClassName(appearance);\n  return React.createElement(Box, _extends({\n    is: \"label\",\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    position: \"relative\",\n    display: \"flex\",\n    marginY: 16\n  }, rest), React.createElement(Box, {\n    className: themedClassName,\n    is: \"input\",\n    id: id,\n    type: \"checkbox\",\n    name: name,\n    value: value,\n    checked: checked || indeterminate,\n    onChange: onChange,\n    disabled: disabled,\n    \"aria-invalid\": isInvalid,\n    ref: callbackRef\n  }), React.createElement(Box, {\n    boxSizing: \"border-box\",\n    borderRadius: 3,\n    display: \"flex\",\n    flex: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 16,\n    height: 16\n  }, indeterminate ? React.createElement(MinusIcon, null) : React.createElement(CheckIcon, null)), label && React.createElement(Text, {\n    marginLeft: 8,\n    size: 300,\n    color: disabled ? 'muted' : 'default'\n  }, label));\n}));\nCheckbox.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, spacing.propTypes), position.propTypes), layout.propTypes), dimensions.propTypes), {}, {\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the checkbox.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the checkbox.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the checkbox displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the checkbox is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n});\nexport default Checkbox;","map":{"version":3,"sources":["../../../src/checkbox/src/Checkbox.js"],"names":["CheckIcon","fill","props","PropTypes","string","MinusIcon","noop","Checkbox","memo","forwardRef","id","name","label","appearance","disabled","isInvalid","checked","onChange","value","indeterminate","rest","ref","setRef","useState","callbackRef","useMergedRef","useEffect","theme","useTheme","themedClassName","spacing","position","layout","dimensions"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, position, layout, dimensions } from 'ui-box'\nimport { Text } from '../../typography'\nimport { useTheme } from '../../theme'\nimport { useMergedRef } from '../../hooks'\n\nconst CheckIcon = ({ fill = 'currentColor', ...props }) => (\n  <svg width={10} height={7} viewBox=\"0 0 10 7\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n    />\n  </svg>\n)\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n}\n\nconst MinusIcon = ({ fill = 'currentColor', ...props }) => (\n  <svg width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n    />\n  </svg>\n)\n\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n}\n\nconst noop = () => {}\n\nconst Checkbox = memo(\n  forwardRef(function Checkbox(props, forwardedRef) {\n    const {\n      id,\n      name,\n      label,\n      appearance = 'default',\n      disabled,\n      isInvalid,\n      checked = false,\n      onChange = noop,\n      value,\n      indeterminate = false,\n      ...rest\n    } = props\n\n    const [ref, setRef] = useState(null)\n    const callbackRef = useMergedRef(setRef, forwardedRef)\n\n    useEffect(() => {\n      if (ref) {\n        ref.indeterminate = indeterminate\n      }\n    }, [ref, indeterminate])\n\n    const theme = useTheme()\n    const themedClassName = theme.getCheckboxClassName(appearance)\n\n    return (\n      <Box\n        is=\"label\"\n        cursor={disabled ? 'not-allowed' : 'pointer'}\n        position=\"relative\"\n        display=\"flex\"\n        marginY={16}\n        {...rest}\n      >\n        <Box\n          className={themedClassName}\n          is=\"input\"\n          id={id}\n          type=\"checkbox\"\n          name={name}\n          value={value}\n          checked={checked || indeterminate}\n          onChange={onChange}\n          disabled={disabled}\n          aria-invalid={isInvalid}\n          ref={callbackRef}\n        />\n        <Box\n          boxSizing=\"border-box\"\n          borderRadius={3}\n          display=\"flex\"\n          flex=\"none\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          width={16}\n          height={16}\n        >\n          {indeterminate ? <MinusIcon /> : <CheckIcon />}\n        </Box>\n        {label && (\n          <Text\n            marginLeft={8}\n            size={300}\n            color={disabled ? 'muted' : 'default'}\n          >\n            {label}\n          </Text>\n        )}\n      </Box>\n    )\n  })\n)\n\nCheckbox.propTypes = {\n  /**\n   * Composes some Box APIs.\n   */\n  ...spacing.propTypes,\n  ...position.propTypes,\n  ...layout.propTypes,\n  ...dimensions.propTypes,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the checkbox.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the checkbox.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the checkbox displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the checkbox is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n}\n\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}