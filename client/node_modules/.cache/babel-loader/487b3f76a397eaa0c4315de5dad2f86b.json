{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { TickIcon } from '../../icons';\nimport { Image } from '../../image';\nimport TableRow from '../../table/src/TableRow';\nimport TextTableCell from '../../table/src/TextTableCell';\nvar disableProps = {\n  color: 'muted'\n};\nvar selectedProps = {\n  color: 'selected'\n};\nvar emptyProps = {};\n\nvar Option = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Option, _PureComponent);\n\n  var _super = _createSuper(Option);\n\n  function Option() {\n    _classCallCheck(this, Option);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Option, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          onSelect = _this$props.onSelect,\n          onDeselect = _this$props.onDeselect,\n          isHighlighted = _this$props.isHighlighted,\n          isSelected = _this$props.isSelected,\n          isSelectable = _this$props.isSelectable,\n          disabled = _this$props.disabled,\n          style = _this$props.style,\n          height = _this$props.height,\n          icon = _this$props.icon,\n          props = _objectWithoutProperties(_this$props, [\"label\", \"onSelect\", \"onDeselect\", \"isHighlighted\", \"isSelected\", \"isSelectable\", \"disabled\", \"style\", \"height\", \"icon\"]);\n\n      var textProps = emptyProps;\n\n      if (disabled) {\n        textProps = disableProps;\n      }\n\n      if (isSelected) {\n        textProps = selectedProps;\n      }\n\n      return React.createElement(TableRow, _extends({\n        isSelectable: isSelectable && !disabled,\n        isHighlighted: isHighlighted,\n        onSelect: onSelect,\n        onDeselect: onDeselect,\n        isSelected: isSelected,\n        style: style,\n        display: \"flex\",\n        alignItems: \"center\",\n        borderBottom: false\n      }, props), React.createElement(Pane, {\n        paddingLeft: 12,\n        paddingRight: 8,\n        opacity: isSelected ? 1 : 0,\n        flexGrow: 0,\n        paddingTop: 4\n      }, React.createElement(TickIcon, {\n        color: \"selected\",\n        size: 14\n      })), React.createElement(TextTableCell, {\n        height: height,\n        borderBottom: \"muted\",\n        textProps: textProps,\n        paddingLeft: 0,\n        borderRight: null,\n        flex: 1,\n        alignSelf: \"stretch\",\n        cursor: disabled ? 'default' : 'pointer'\n      }, React.createElement(Pane, {\n        alignItems: \"center\",\n        display: \"flex\"\n      }, icon && React.createElement(Image, {\n        src: icon,\n        width: 24,\n        marginRight: 8\n      }), label)));\n    }\n  }]);\n\n  return Option;\n}(PureComponent);\n\nOption.displayName = \"Option\";\n\n_defineProperty(Option, \"propTypes\", {\n  label: PropTypes.string,\n  icon: PropTypes.string,\n  style: PropTypes.any,\n  height: PropTypes.number,\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n  disabled: PropTypes.bool\n});\n\nexport { Option as default };","map":{"version":3,"sources":["../../../src/select-menu/src/Option.js"],"names":["disableProps","color","selectedProps","emptyProps","Option","PureComponent","label","PropTypes","icon","style","height","onSelect","onDeselect","isHighlighted","isSelected","isSelectable","disabled","bool","props","textProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { TickIcon } from '../../icons'\nimport { Image } from '../../image'\nimport TableRow from '../../table/src/TableRow'\nimport TextTableCell from '../../table/src/TextTableCell'\n\nconst disableProps = { color: 'muted' }\nconst selectedProps = { color: 'selected' }\nconst emptyProps = {}\n\nexport default class Option extends PureComponent {\n  static propTypes = {\n    label: PropTypes.string,\n    icon: PropTypes.string,\n    style: PropTypes.any,\n    height: PropTypes.number,\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    isHighlighted: PropTypes.bool,\n    isSelected: PropTypes.bool,\n    isSelectable: PropTypes.bool,\n    disabled: PropTypes.bool\n  }\n\n  render() {\n    const {\n      label,\n      onSelect,\n      onDeselect,\n      isHighlighted,\n      isSelected,\n      isSelectable,\n      disabled,\n      style,\n      height,\n      icon,\n      ...props\n    } = this.props\n\n    let textProps = emptyProps\n    if (disabled) {\n      textProps = disableProps\n    }\n\n    if (isSelected) {\n      textProps = selectedProps\n    }\n\n    return (\n      <TableRow\n        isSelectable={isSelectable && !disabled}\n        isHighlighted={isHighlighted}\n        onSelect={onSelect}\n        onDeselect={onDeselect}\n        isSelected={isSelected}\n        style={style}\n        display=\"flex\"\n        alignItems=\"center\"\n        borderBottom={false}\n        {...props}\n      >\n        <Pane\n          paddingLeft={12}\n          paddingRight={8}\n          opacity={isSelected ? 1 : 0}\n          flexGrow={0}\n          paddingTop={4}\n        >\n          <TickIcon color=\"selected\" size={14} />\n        </Pane>\n        <TextTableCell\n          height={height}\n          borderBottom=\"muted\"\n          textProps={textProps}\n          paddingLeft={0}\n          borderRight={null}\n          flex={1}\n          alignSelf=\"stretch\"\n          cursor={disabled ? 'default' : 'pointer'}\n        >\n          <Pane alignItems=\"center\" display=\"flex\">\n            {icon && <Image src={icon} width={24} marginRight={8} />}\n            {label}\n          </Pane>\n        </TextTableCell>\n      </TableRow>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}