{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../../typography';\nvar FormFieldLabel = memo(forwardRef(function FormFieldLabel(props, ref) {\n  var children = props.children,\n      isAstrixShown = props.isAstrixShown,\n      rest = _objectWithoutProperties(props, [\"children\", \"isAstrixShown\"]);\n\n  return React.createElement(Label, _extends({\n    display: \"block\"\n  }, rest, {\n    ref: ref\n  }), children, ' ', isAstrixShown && React.createElement(\"span\", {\n    title: \"This field is required.\"\n  }, \"*\"));\n}));\nFormFieldLabel.propTypes = _objectSpread(_objectSpread({}, Label.propTypes), {}, {\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  isAstrixShown: PropTypes.bool\n});\nexport default FormFieldLabel;","map":{"version":3,"sources":["../../../src/form-field/src/FormFieldLabel.js"],"names":["FormFieldLabel","memo","forwardRef","children","isAstrixShown","rest","props","ref","Label","PropTypes","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,KAAA,QAAA,kBAAA;AAEA,IAAMA,cAAc,GAAGC,IAAI,CACzBC,UAAU,CAAC,SAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAoC;AAAA,MACrCC,QADqC,GACAG,KADA,CAAA,QAAA;AAAA,MAC3BF,aAD2B,GACAE,KADA,CAAA,aAAA;AAAA,MACTD,IADS,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,eAAA,CAAA,CAAA;;AAE7C,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAO,IAAA,OAAO,EAAC;AAAf,GAAA,EAAA,IAAA,EAAA;AAAiC,IAAA,GAAG,EAAEE;AAAtC,GAAA,CAAA,EAAA,QAAA,EAAA,GAAA,EAEGH,aAAa,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,KAAK,EAAC;AAAZ,GAAA,EAHtB,GAGsB,CAFpB,CADF;AAHJ,CACY,CADe,CAA3B;AAYAJ,cAAc,CAAdA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAIKQ,KAAK,CAJVR,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAME;;;AAGAI,EAAAA,aAAa,EAAEK,SAAS,CAACC;AAT3BV,CAAAA,CAAAA;AAYA,eAAA,cAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Label } from '../../typography'\n\nconst FormFieldLabel = memo(\n  forwardRef(function FormFieldLabel(props, ref) {\n    const { children, isAstrixShown, ...rest } = props\n    return (\n      <Label display=\"block\" {...rest} ref={ref}>\n        {children}{' '}\n        {isAstrixShown && <span title=\"This field is required.\">*</span>}\n      </Label>\n    )\n  })\n)\n\nFormFieldLabel.propTypes = {\n  /**\n   * Composes the Label component as the base.\n   */\n  ...Label.propTypes,\n\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  isAstrixShown: PropTypes.bool\n}\n\nexport default FormFieldLabel\n"]},"metadata":{},"sourceType":"module"}