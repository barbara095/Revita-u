{"ast":null,"code":"import { Themer } from '../../../../themer';\nimport memoizeClassName from '../utils/memoizeClassName';\nimport scales from '../foundational-styles/scales';\nimport { getPrimaryButtonStylesForIntent } from '../helpers';\nvar primaryStyle = getPrimaryButtonStylesForIntent();\nvar defaultAppearance = Themer.createCheckboxAppearance({\n  base: {\n    color: 'white',\n    backgroundColor: 'white',\n    backgroundImage: \"linear-gradient(to top, \".concat(scales.neutral.N2A, \", white)\"),\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N3A)\n  },\n  disabled: {\n    cursor: 'not-allowed',\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n    backgroundColor: scales.neutral.N2A,\n    backgroundImage: 'none'\n  },\n  hover: {\n    backgroundImage: \"linear-gradient(to top, \".concat(scales.neutral.N2A, \", \").concat(scales.neutral.N1A, \")\"),\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N2A)\n  },\n  focus: {\n    boxShadow: \"0 0 0 2px \".concat(scales.blue.B4A, \", inset 0 0 0 1px \").concat(scales.neutral.N5A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N3A)\n  },\n  active: {\n    backgroundImage: 'none',\n    backgroundColor: scales.blue.B3A,\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.blue.B5A)\n  },\n  checked: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.base,\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N5A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N2A)\n  },\n  checkedHover: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.hover,\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N5A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N2A)\n  },\n  checkedDisabled: {\n    color: scales.neutral.N6A,\n    backgroundImage: \"linear-gradient(to top, \".concat(scales.neutral.N2A, \", \").concat(scales.neutral.N1A, \")\"),\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N2A)\n  },\n  checkedActive: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.active,\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A, \", inset 0 -1px 1px 0 \").concat(scales.neutral.N2A)\n  }\n});\n/**\n * There is only a single appearance in the default theme.\n * @param {String} appearance.\n * @return {Object} the appearance of the checkbox.\n */\n\nvar getCheckboxAppearance = function getCheckboxAppearance() {\n  return defaultAppearance;\n};\n/**\n * Get the className of a `Checkbox`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\n\n\nexport default memoizeClassName(getCheckboxAppearance);","map":{"version":3,"sources":["../../../../../src/theme/src/default-theme/component-specific/getCheckboxClassName.js"],"names":["primaryStyle","getPrimaryButtonStylesForIntent","defaultAppearance","base","color","backgroundColor","backgroundImage","scales","boxShadow","disabled","cursor","hover","focus","active","checked","checkedHover","checkedDisabled","checkedActive","getCheckboxAppearance","memoizeClassName"],"mappings":"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","sourcesContent":["import { Themer } from '../../../../themer'\nimport memoizeClassName from '../utils/memoizeClassName'\nimport scales from '../foundational-styles/scales'\nimport { getPrimaryButtonStylesForIntent } from '../helpers'\n\nconst primaryStyle = getPrimaryButtonStylesForIntent()\n\nconst defaultAppearance = Themer.createCheckboxAppearance({\n  base: {\n    color: 'white',\n    backgroundColor: 'white',\n    backgroundImage: `linear-gradient(to top, ${scales.neutral.N2A}, white)`,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N3A\n    }`\n  },\n  disabled: {\n    cursor: 'not-allowed',\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}`,\n    backgroundColor: scales.neutral.N2A,\n    backgroundImage: 'none'\n  },\n  hover: {\n    backgroundImage: `linear-gradient(to top, ${scales.neutral.N2A}, ${\n      scales.neutral.N1A\n    })`,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N2A\n    }`\n  },\n  focus: {\n    boxShadow: `0 0 0 2px ${scales.blue.B4A}, inset 0 0 0 1px ${\n      scales.neutral.N5A\n    }, inset 0 -1px 1px 0 ${scales.neutral.N3A}`\n  },\n  active: {\n    backgroundImage: 'none',\n    backgroundColor: scales.blue.B3A,\n    boxShadow: `inset 0 0 0 1px ${scales.blue.B5A}`\n  },\n  checked: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.base,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N5A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N2A\n    }`\n  },\n  checkedHover: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.hover,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N5A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N2A\n    }`\n  },\n  checkedDisabled: {\n    color: scales.neutral.N6A,\n    backgroundImage: `linear-gradient(to top, ${scales.neutral.N2A}, ${\n      scales.neutral.N1A\n    })`,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N2A\n    }`\n  },\n  checkedActive: {\n    color: 'white',\n    backgroundImage: primaryStyle.linearGradient.active,\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}, inset 0 -1px 1px 0 ${\n      scales.neutral.N2A\n    }`\n  }\n})\n\n/**\n * There is only a single appearance in the default theme.\n * @param {String} appearance.\n * @return {Object} the appearance of the checkbox.\n */\nconst getCheckboxAppearance = () => {\n  return defaultAppearance\n}\n\n/**\n * Get the className of a `Checkbox`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\nexport default memoizeClassName(getCheckboxAppearance)\n"]},"metadata":{},"sourceType":"module"}