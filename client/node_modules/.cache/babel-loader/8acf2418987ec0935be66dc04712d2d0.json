{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport createAppearance from './createAppearance';\nimport missingStateWarning from './missingStateWarning';\nvar disabledState = '&[disabled] + div';\nvar hoverState = '&:not([disabled]):hover + div';\nvar focusState = '&:not([disabled]):focus + div';\nvar activeState = '&:not([disabled]):active + div';\nvar checkedState = '&:checked + div';\nvar checkedHoverState = '&:checked:hover + div';\nvar checkedActiveState = '&:not([disabled]):checked:active + div';\nvar checkedDisabledState = '&[disabled]:checked + div';\nvar hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n};\n/**\n * @param {object} items - object with a set of states.\n * @return {object} the final appearance.\n */\n\nvar createSwitchAppearance = function createSwitchAppearance() {\n  var _objectSpread2;\n\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  missingStateWarning({\n    items: items,\n    props: ['base', 'disabled', 'hover', 'active', 'focus', 'checked', 'checkedActive', 'checkedDisabled'],\n    cb: function cb(prop) {\n      console.error(\"Themer.createSwitchAppearance() is missing a \".concat(prop, \" item\"), items);\n    }\n  });\n  return _objectSpread(_objectSpread({}, hiddenCheckboxStyle), {}, (_objectSpread2 = {\n    '& + div > svg': {\n      display: 'none'\n    },\n    '& + div': _objectSpread({\n      cursor: 'pointer'\n    }, createAppearance(items.base))\n  }, _defineProperty(_objectSpread2, disabledState, _objectSpread({\n    cursor: 'not-allowed'\n  }, createAppearance(items.disabled))), _defineProperty(_objectSpread2, hoverState, createAppearance(items.hover)), _defineProperty(_objectSpread2, focusState, createAppearance(items.focus)), _defineProperty(_objectSpread2, activeState, createAppearance(items.active)), _defineProperty(_objectSpread2, checkedState, _objectSpread(_objectSpread({}, createAppearance(items.checked)), {}, {\n    '& > svg': {\n      display: 'block'\n    }\n  })), _defineProperty(_objectSpread2, checkedHoverState, _objectSpread(_objectSpread({}, createAppearance(items.checkedHover)), {}, {\n    '& > svg': {\n      display: 'block'\n    }\n  })), _defineProperty(_objectSpread2, checkedActiveState, _objectSpread(_objectSpread({}, createAppearance(items.checkedActive)), {}, {\n    '& > svg': {\n      display: 'block'\n    }\n  })), _defineProperty(_objectSpread2, checkedDisabledState, _objectSpread(_objectSpread({}, createAppearance(items.checkedDisabled)), {}, {\n    '& > svg': {\n      display: 'block'\n    }\n  })), _objectSpread2));\n};\n\nexport default createSwitchAppearance;","map":{"version":3,"sources":["../../../src/themer/src/createSwitchAppearance.js"],"names":["disabledState","hoverState","focusState","activeState","checkedState","checkedHoverState","checkedActiveState","checkedDisabledState","hiddenCheckboxStyle","border","clip","height","overflow","padding","position","whiteSpace","width","opacity","createSwitchAppearance","items","missingStateWarning","props","cb","console","display","cursor","createAppearance"],"mappings":"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","sourcesContent":["import createAppearance from './createAppearance'\nimport missingStateWarning from './missingStateWarning'\n\nconst disabledState = '&[disabled] + div'\nconst hoverState = '&:not([disabled]):hover + div'\nconst focusState = '&:not([disabled]):focus + div'\nconst activeState = '&:not([disabled]):active + div'\nconst checkedState = '&:checked + div'\nconst checkedHoverState = '&:checked:hover + div'\nconst checkedActiveState = '&:not([disabled]):checked:active + div'\nconst checkedDisabledState = '&[disabled]:checked + div'\n\nconst hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n}\n\n/**\n * @param {object} items - object with a set of states.\n * @return {object} the final appearance.\n */\nconst createSwitchAppearance = (items = {}) => {\n  missingStateWarning({\n    items,\n    props: [\n      'base',\n      'disabled',\n      'hover',\n      'active',\n      'focus',\n      'checked',\n      'checkedActive',\n      'checkedDisabled'\n    ],\n    cb: prop => {\n      console.error(\n        `Themer.createSwitchAppearance() is missing a ${prop} item`,\n        items\n      )\n    }\n  })\n\n  return {\n    ...hiddenCheckboxStyle,\n    '& + div > svg': { display: 'none' },\n    '& + div': { cursor: 'pointer', ...createAppearance(items.base) },\n    [disabledState]: {\n      cursor: 'not-allowed',\n      ...createAppearance(items.disabled)\n    },\n    [hoverState]: createAppearance(items.hover),\n    [focusState]: createAppearance(items.focus),\n    [activeState]: createAppearance(items.active),\n    [checkedState]: {\n      ...createAppearance(items.checked),\n      '& > svg': { display: 'block' }\n    },\n    [checkedHoverState]: {\n      ...createAppearance(items.checkedHover),\n      '& > svg': { display: 'block' }\n    },\n    [checkedActiveState]: {\n      ...createAppearance(items.checkedActive),\n      '& > svg': { display: 'block' }\n    },\n    [checkedDisabledState]: {\n      ...createAppearance(items.checkedDisabled),\n      '& > svg': { display: 'block' }\n    }\n  }\n}\n\nexport default createSwitchAppearance\n"]},"metadata":{},"sourceType":"module"}