{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport fuzzaldrin from 'fuzzaldrin-plus';\nimport VirtualList from 'react-tiny-virtual-list';\nimport { Pane } from '../../layers';\nimport { SearchIcon } from '../../icons';\nimport TableHead from '../../table/src/TableHead';\nimport SearchTableHeaderCell from '../../table/src/SearchTableHeaderCell';\nimport OptionShapePropType from './OptionShapePropType';\nimport Option from './Option';\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\n\nvar fuzzyFilter = function fuzzyFilter(options, input, _ref) {\n  var key = _ref.key;\n  return fuzzaldrin.filter(options, input, {\n    key: key\n  });\n};\n/**\n * This is the default item renderer of options\n * you can pass custom renderers as long as they work the same as the Option\n */\n\n\nvar itemRenderer = function itemRenderer(props) {\n  return React.createElement(Option, props);\n};\n\nitemRenderer.displayName = \"itemRenderer\";\n\nvar noop = function noop() {};\n\nvar OptionsList = /*#__PURE__*/function (_PureComponent) {\n  _inherits(OptionsList, _PureComponent);\n\n  var _super = _createSuper(OptionsList);\n\n  function OptionsList(props, context) {\n    var _this;\n\n    _classCallCheck(this, OptionsList);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"isSelected\", function (item) {\n      var selected = _this.state.selected;\n      return Boolean(selected.find(function (selectedItem) {\n        return selectedItem === item.value;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"search\", function (options) {\n      var optionsFilter = _this.props.optionsFilter;\n      var searchValue = _this.state.searchValue;\n\n      if (searchValue.trim() === '') {\n        return options;\n      } // Preserve backwards compatibility with allowing custom filters, which accept array of strings\n\n\n      if (typeof optionsFilter === 'function') {\n        return optionsFilter(options.map(function (item) {\n          return item.label;\n        }), searchValue).map(function (name) {\n          return options.find(function (item) {\n            return item.label === name;\n          });\n        });\n      }\n\n      return fuzzyFilter(options, searchValue, {\n        key: 'label'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCurrentIndex\", function () {\n      var selected = _this.props.selected;\n\n      var options = _this.getFilteredOptions();\n\n      return options.findIndex(function (option) {\n        return option.value === selected[selected.length - 1];\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      if (e.key === 'ArrowUp') {\n        _this.handleArrowUp();\n      }\n\n      if (e.key === 'ArrowDown') {\n        _this.handleArrowDown();\n      }\n\n      if (e.key === 'Enter') {\n        _this.handleEnter();\n      }\n\n      if (e.key === 'Escape') {\n        _this.props.close();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleArrowUp\", function () {\n      var onSelect = _this.props.onSelect;\n\n      var options = _this.getFilteredOptions();\n\n      var nextIndex = _this.getCurrentIndex() - 1;\n\n      if (nextIndex < 0) {\n        nextIndex = options.length - 1;\n      }\n\n      if (_this.isSelected(options[nextIndex])) {\n        return;\n      }\n\n      onSelect(options[nextIndex]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleArrowDown\", function () {\n      var onSelect = _this.props.onSelect;\n\n      var options = _this.getFilteredOptions();\n\n      var nextIndex = _this.getCurrentIndex() + 1;\n\n      if (nextIndex === options.length) {\n        nextIndex = 0;\n      }\n\n      if (!_this.isSelected(options[nextIndex])) {\n        onSelect(options[nextIndex]);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEnter\", function () {\n      var isSelected = _this.getCurrentIndex() !== -1;\n\n      if (isSelected) {\n        if (!_this.props.isMultiSelect && _this.props.closeOnSelect) {\n          _this.props.close();\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (searchValue) {\n      _this.setState({\n        searchValue: searchValue\n      });\n\n      _this.props.onFilterChange(searchValue);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (item) {\n      if (_this.isSelected(item)) {\n        _this.props.onDeselect(item);\n      } else {\n        _this.props.onSelect(item);\n      }\n\n      if (!_this.props.isMultiSelect && _this.props.closeOnSelect) {\n        _this.props.close();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeselect\", function (item) {\n      _this.props.onDeselect(item);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"assignSearchRef\", function (ref) {\n      _this.searchRef = ref;\n    });\n\n    _this.state = {\n      searchValue: props.defaultSearchValue,\n      selected: props.selected\n    };\n    return _this;\n  }\n\n  _createClass(OptionsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var hasFilter = this.props.hasFilter;\n      if (!hasFilter) return;\n      /**\n       * Hacky solution for broken autoFocus\n       * https://github.com/segmentio/evergreen/issues/90\n       */\n\n      this.requestId = requestAnimationFrame(function () {\n        if (_this2.searchRef) _this2.searchRef.focus();\n      });\n      window.addEventListener('keydown', this.handleKeyDown);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.requestId);\n      window.removeEventListener('keydown', this.handleKeyDown);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.selected !== this.props.selected) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          selected: this.props.selected\n        });\n      }\n    }\n  }, {\n    key: \"getFilteredOptions\",\n    value: function getFilteredOptions() {\n      var options = this.props.options;\n      return this.search(options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          originalOptions = _this$props.options,\n          close = _this$props.close,\n          closeOnSelect = _this$props.closeOnSelect,\n          width = _this$props.width,\n          height = _this$props.height,\n          onSelect = _this$props.onSelect,\n          onDeselect = _this$props.onDeselect,\n          onFilterChange = _this$props.onFilterChange,\n          selected = _this$props.selected,\n          hasFilter = _this$props.hasFilter,\n          filterPlaceholder = _this$props.filterPlaceholder,\n          filterIcon = _this$props.filterIcon,\n          optionSize = _this$props.optionSize,\n          _renderItem = _this$props.renderItem,\n          optionsFilter = _this$props.optionsFilter,\n          isMultiSelect = _this$props.isMultiSelect,\n          defaultSearchValue = _this$props.defaultSearchValue,\n          props = _objectWithoutProperties(_this$props, [\"options\", \"close\", \"closeOnSelect\", \"width\", \"height\", \"onSelect\", \"onDeselect\", \"onFilterChange\", \"selected\", \"hasFilter\", \"filterPlaceholder\", \"filterIcon\", \"optionSize\", \"renderItem\", \"optionsFilter\", \"isMultiSelect\", \"defaultSearchValue\"]);\n\n      var options = this.search(originalOptions);\n      var listHeight = height - (hasFilter ? 32 : 0);\n      var currentIndex = this.getCurrentIndex();\n      var scrollToIndex = currentIndex === -1 ? 0 : currentIndex;\n      return React.createElement(Pane, _extends({\n        height: height,\n        width: width,\n        display: \"flex\",\n        flexDirection: \"column\"\n      }, props), hasFilter && React.createElement(TableHead, null, React.createElement(SearchTableHeaderCell, {\n        onChange: this.handleChange,\n        ref: this.assignSearchRef,\n        borderRight: null,\n        height: 32,\n        placeholder: filterPlaceholder,\n        icon: filterIcon\n      })), React.createElement(Pane, {\n        flex: 1\n      }, React.createElement(VirtualList, {\n        height: listHeight,\n        width: \"100%\",\n        itemSize: optionSize,\n        itemCount: options.length,\n        overscanCount: 20,\n        scrollToAlignment: \"auto\",\n        scrollToIndex: scrollToIndex || undefined,\n        renderItem: function renderItem(_ref2) {\n          var index = _ref2.index,\n              style = _ref2.style;\n          var item = options[index];\n\n          var isSelected = _this3.isSelected(item);\n\n          return _renderItem({\n            key: item.value,\n            label: item.label,\n            icon: item.icon,\n            style: style,\n            height: optionSize,\n            onSelect: function onSelect() {\n              return _this3.handleSelect(item);\n            },\n            onDeselect: function onDeselect() {\n              return _this3.handleDeselect(item);\n            },\n            isSelectable: !isSelected || isMultiSelect,\n            isSelected: isSelected,\n            disabled: item.disabled,\n            tabIndex: 0\n          });\n        }\n      })));\n    }\n  }]);\n\n  return OptionsList;\n}(PureComponent);\n\nOptionsList.displayName = \"OptionsList\";\n\n_defineProperty(OptionsList, \"propTypes\", {\n  options: PropTypes.arrayOf(OptionShapePropType),\n  close: PropTypes.func,\n  height: PropTypes.number,\n  width: PropTypes.number,\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /**\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * This holds the values of the options\n   */\n  selected: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onFilterChange: PropTypes.func,\n  hasFilter: PropTypes.bool,\n  optionSize: PropTypes.number,\n  renderItem: PropTypes.func,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n  optionsFilter: PropTypes.func,\n  defaultSearchValue: PropTypes.string\n});\n\n_defineProperty(OptionsList, \"defaultProps\", {\n  options: [],\n\n  /**\n   * Including border bottom\n   * For some reason passing height to TableRow doesn't work\n   * TODO: fix hacky solution\n   */\n  optionSize: 33,\n  onSelect: noop,\n  onDeselect: noop,\n  onFilterChange: noop,\n  selected: [],\n  renderItem: itemRenderer,\n  filterPlaceholder: 'Filter...',\n  filterIcon: SearchIcon,\n  defaultSearchValue: ''\n});\n\nexport { OptionsList as default };","map":{"version":3,"sources":["../../../src/select-menu/src/OptionsList.js"],"names":["fuzzyFilter","key","itemRenderer","noop","OptionsList","PureComponent","options","PropTypes","close","height","width","isMultiSelect","closeOnSelect","selected","onSelect","onDeselect","onFilterChange","hasFilter","optionSize","renderItem","filterPlaceholder","filterIcon","optionsFilter","defaultSearchValue","string","searchValue","props","requestAnimationFrame","window","cancelAnimationFrame","prevProps","Boolean","selectedItem","item","option","e","nextIndex","isSelected","originalOptions","listHeight","currentIndex","scrollToIndex","index","style","label","icon","isSelectable","disabled","tabIndex"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport fuzzaldrin from 'fuzzaldrin-plus'\nimport VirtualList from 'react-tiny-virtual-list'\nimport { Pane } from '../../layers'\nimport { SearchIcon } from '../../icons'\nimport TableHead from '../../table/src/TableHead'\nimport SearchTableHeaderCell from '../../table/src/SearchTableHeaderCell'\nimport OptionShapePropType from './OptionShapePropType'\nimport Option from './Option'\n\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\nconst fuzzyFilter = (options, input, { key }) => {\n  return fuzzaldrin.filter(options, input, { key })\n}\n\n/**\n * This is the default item renderer of options\n * you can pass custom renderers as long as they work the same as the Option\n */\nconst itemRenderer = props => <Option {...props} />\n\nconst noop = () => {}\n\nexport default class OptionsList extends PureComponent {\n  static propTypes = {\n    options: PropTypes.arrayOf(OptionShapePropType),\n    close: PropTypes.func,\n    height: PropTypes.number,\n    width: PropTypes.number,\n\n    /**\n     * When true, multi select is accounted for.\n     */\n    isMultiSelect: PropTypes.bool,\n\n    /**\n     * When true, menu closes on option selection.\n     */\n    closeOnSelect: PropTypes.bool,\n\n    /**\n     * This holds the values of the options\n     */\n    selected: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n    onSelect: PropTypes.func,\n    onDeselect: PropTypes.func,\n    onFilterChange: PropTypes.func,\n    hasFilter: PropTypes.bool,\n    optionSize: PropTypes.number,\n    renderItem: PropTypes.func,\n    filterPlaceholder: PropTypes.string,\n    filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n    optionsFilter: PropTypes.func,\n    defaultSearchValue: PropTypes.string\n  }\n\n  static defaultProps = {\n    options: [],\n    /**\n     * Including border bottom\n     * For some reason passing height to TableRow doesn't work\n     * TODO: fix hacky solution\n     */\n    optionSize: 33,\n    onSelect: noop,\n    onDeselect: noop,\n    onFilterChange: noop,\n    selected: [],\n    renderItem: itemRenderer,\n    filterPlaceholder: 'Filter...',\n    filterIcon: SearchIcon,\n    defaultSearchValue: ''\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      searchValue: props.defaultSearchValue,\n      selected: props.selected\n    }\n  }\n\n  componentDidMount() {\n    const { hasFilter } = this.props\n    if (!hasFilter) return\n    /**\n     * Hacky solution for broken autoFocus\n     * https://github.com/segmentio/evergreen/issues/90\n     */\n    this.requestId = requestAnimationFrame(() => {\n      if (this.searchRef) this.searchRef.focus()\n    })\n\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.requestId)\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        selected: this.props.selected\n      })\n    }\n  }\n\n  isSelected = item => {\n    const { selected } = this.state\n\n    return Boolean(selected.find(selectedItem => selectedItem === item.value))\n  }\n\n  search = options => {\n    const { optionsFilter } = this.props\n    const { searchValue } = this.state\n\n    if (searchValue.trim() === '') {\n      return options\n    }\n\n    // Preserve backwards compatibility with allowing custom filters, which accept array of strings\n    if (typeof optionsFilter === 'function') {\n      return optionsFilter(\n        options.map(item => item.label),\n        searchValue\n      ).map(name => options.find(item => item.label === name))\n    }\n\n    return fuzzyFilter(options, searchValue, { key: 'label' })\n  }\n\n  getCurrentIndex = () => {\n    const { selected } = this.props\n    const options = this.getFilteredOptions()\n\n    return options.findIndex(\n      option => option.value === selected[selected.length - 1]\n    )\n  }\n\n  getFilteredOptions() {\n    const { options } = this.props\n\n    return this.search(options)\n  }\n\n  handleKeyDown = e => {\n    if (e.key === 'ArrowUp') {\n      this.handleArrowUp()\n    }\n\n    if (e.key === 'ArrowDown') {\n      this.handleArrowDown()\n    }\n\n    if (e.key === 'Enter') {\n      this.handleEnter()\n    }\n\n    if (e.key === 'Escape') {\n      this.props.close()\n    }\n  }\n\n  handleArrowUp = () => {\n    const { onSelect } = this.props\n    const options = this.getFilteredOptions()\n\n    let nextIndex = this.getCurrentIndex() - 1\n\n    if (nextIndex < 0) {\n      nextIndex = options.length - 1\n    }\n\n    if (this.isSelected(options[nextIndex])) {\n      return\n    }\n\n    onSelect(options[nextIndex])\n  }\n\n  handleArrowDown = () => {\n    const { onSelect } = this.props\n    const options = this.getFilteredOptions()\n\n    let nextIndex = this.getCurrentIndex() + 1\n\n    if (nextIndex === options.length) {\n      nextIndex = 0\n    }\n\n    if (!this.isSelected(options[nextIndex])) {\n      onSelect(options[nextIndex])\n    }\n  }\n\n  handleEnter = () => {\n    const isSelected = this.getCurrentIndex() !== -1\n\n    if (isSelected) {\n      if (!this.props.isMultiSelect && this.props.closeOnSelect) {\n        this.props.close()\n      }\n    }\n  }\n\n  handleChange = searchValue => {\n    this.setState({\n      searchValue\n    })\n    this.props.onFilterChange(searchValue)\n  }\n\n  handleSelect = item => {\n    if (this.isSelected(item)) {\n      this.props.onDeselect(item)\n    } else {\n      this.props.onSelect(item)\n    }\n\n    if (!this.props.isMultiSelect && this.props.closeOnSelect) {\n      this.props.close()\n    }\n  }\n\n  handleDeselect = item => {\n    this.props.onDeselect(item)\n  }\n\n  assignSearchRef = ref => {\n    this.searchRef = ref\n  }\n\n  render() {\n    const {\n      options: originalOptions,\n      close,\n      closeOnSelect,\n      width,\n      height,\n      onSelect,\n      onDeselect,\n      onFilterChange,\n      selected,\n      hasFilter,\n      filterPlaceholder,\n      filterIcon,\n      optionSize,\n      renderItem,\n      optionsFilter,\n      isMultiSelect,\n      defaultSearchValue,\n      ...props\n    } = this.props\n    const options = this.search(originalOptions)\n    const listHeight = height - (hasFilter ? 32 : 0)\n    const currentIndex = this.getCurrentIndex()\n    const scrollToIndex = currentIndex === -1 ? 0 : currentIndex\n\n    return (\n      <Pane\n        height={height}\n        width={width}\n        display=\"flex\"\n        flexDirection=\"column\"\n        {...props}\n      >\n        {hasFilter && (\n          <TableHead>\n            <SearchTableHeaderCell\n              onChange={this.handleChange}\n              ref={this.assignSearchRef}\n              borderRight={null}\n              height={32}\n              placeholder={filterPlaceholder}\n              icon={filterIcon}\n            />\n          </TableHead>\n        )}\n        <Pane flex={1}>\n          <VirtualList\n            height={listHeight}\n            width=\"100%\"\n            itemSize={optionSize}\n            itemCount={options.length}\n            overscanCount={20}\n            scrollToAlignment=\"auto\"\n            scrollToIndex={scrollToIndex || undefined}\n            renderItem={({ index, style }) => {\n              const item = options[index]\n              const isSelected = this.isSelected(item)\n              return renderItem({\n                key: item.value,\n                label: item.label,\n                icon: item.icon,\n                style,\n                height: optionSize,\n                onSelect: () => this.handleSelect(item),\n                onDeselect: () => this.handleDeselect(item),\n                isSelectable: !isSelected || isMultiSelect,\n                isSelected,\n                disabled: item.disabled,\n                tabIndex: 0\n              })\n            }}\n          />\n        </Pane>\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}