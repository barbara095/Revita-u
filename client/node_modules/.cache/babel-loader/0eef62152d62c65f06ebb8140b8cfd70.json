{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport createAppearance from './createAppearance';\nimport missingStateWarning from './missingStateWarning';\nvar focusState = '&[data-isselectable=\"true\"]:focus, &[aria-expanded=\"true\"][aria-haspopup=\"true\"]';\n/**\n * @param {object} items - object with a set of states.\n * @return {object} the final appearance.\n */\n\nvar createTableCellAppearance = function createTableCellAppearance() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  missingStateWarning({\n    items: items,\n    props: ['focus'],\n    cb: function cb(prop) {\n      console.error(\"Themer.createTableCellAppearance() is missing a \".concat(prop, \" item\"), items);\n    }\n  });\n  return _defineProperty({}, focusState, createAppearance(items.focus));\n};\n\nexport default createTableCellAppearance;","map":{"version":3,"sources":["../../../src/themer/src/createTableCellAppearance.js"],"names":["focusState","createTableCellAppearance","items","missingStateWarning","props","cb","console","createAppearance"],"mappings":";AAAA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,mBAAA,MAAA,uBAAA;AAEA,IAAMA,UAAU,GAAhB,kFAAA;AAGA;;;;;AAIA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAgB;AAAA,MAAfC,KAAe,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;AAChDC,EAAAA,mBAAmB,CAAC;AAClBD,IAAAA,KAAK,EADa,KAAA;AAElBE,IAAAA,KAAK,EAAE,CAFW,OAEX,CAFW;AAGlBC,IAAAA,EAAE,EAAE,SAAA,EAAA,CAAA,IAAA,EAAQ;AACVC,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,mDAAAA,MAAAA,CAAAA,IAAAA,EAAAA,OAAAA,CAAAA,EAAAA,KAAAA;AAID;AARiB,GAAD,CAAnBH;AAWA,SAAA,eAAA,CAAA,EAAA,EAAA,UAAA,EACgBI,gBAAgB,CAACL,KAAK,CADtC,KACgC,CADhC,CAAA;AAZF,CAAA;;AAiBA,eAAA,yBAAA","sourcesContent":["import createAppearance from './createAppearance'\nimport missingStateWarning from './missingStateWarning'\n\nconst focusState =\n  '&[data-isselectable=\"true\"]:focus, &[aria-expanded=\"true\"][aria-haspopup=\"true\"]'\n\n/**\n * @param {object} items - object with a set of states.\n * @return {object} the final appearance.\n */\nconst createTableCellAppearance = (items = {}) => {\n  missingStateWarning({\n    items,\n    props: ['focus'],\n    cb: prop => {\n      console.error(\n        `Themer.createTableCellAppearance() is missing a ${prop} item`,\n        items\n      )\n    }\n  })\n\n  return {\n    [focusState]: createAppearance(items.focus)\n  }\n}\n\nexport default createTableCellAppearance\n"]},"metadata":{},"sourceType":"module"}