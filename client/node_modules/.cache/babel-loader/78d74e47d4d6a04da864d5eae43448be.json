{"ast":null,"code":"import { Themer } from '../../../../themer';\nimport memoizeClassName from '../utils/memoizeClassName';\nimport scales from '../foundational-styles/scales';\nimport palette from '../foundational-styles/palette';\nvar TagInputAppearances = {};\nTagInputAppearances[\"default\"] = Themer.createTagInputAppearance({\n  base: {\n    backgroundColor: 'white',\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N5A, \", inset 0 1px 2px \").concat(scales.neutral.N4A)\n  },\n  invalid: {\n    boxShadow: \"inset 0 0 0 1px \".concat(palette.red.base, \", inset 0 1px 2px \").concat(scales.neutral.N4A)\n  },\n  focus: {\n    boxShadow: \"inset 0 0 2px \".concat(scales.neutral.N4A, \", inset 0 0 0 1px \").concat(scales.blue.B7, \", 0 0 0 3px \").concat(scales.blue.B4A)\n  },\n  disabled: {\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n    backgroundColor: scales.neutral.N2\n  }\n});\n/**\n * Get the appearance of a `TagInput`.\n * @param {string} appearance - the appearance name\n * @return {Object} the appearance object.\n */\n\nvar getTextInputAppearance = function getTextInputAppearance() {\n  return TagInputAppearances[\"default\"];\n};\n/**\n * Get the className of a `TagInput`.\n * @param {string} appearance - the appearance name\n * @return {string} the appearance class name.\n */\n\n\nexport default memoizeClassName(getTextInputAppearance);","map":{"version":3,"sources":["../../../../../src/theme/src/default-theme/component-specific/getTagInputClassName.js"],"names":["TagInputAppearances","base","backgroundColor","boxShadow","scales","invalid","palette","focus","disabled","N2","getTextInputAppearance","memoizeClassName"],"mappings":"AAAA,SAAA,MAAA,QAAA,oBAAA;AACA,OAAA,gBAAA,MAAA,2BAAA;AACA,OAAA,MAAA,MAAA,+BAAA;AACA,OAAA,OAAA,MAAA,gCAAA;AAEA,IAAMA,mBAAmB,GAAzB,EAAA;AAEAA,mBAAmB,CAAnBA,SAAmB,CAAnBA,GAA8B,MAAM,CAAN,wBAAA,CAAgC;AAC5DC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EADX,OAAA;AAEJC,IAAAA,SAAS,EAAA,mBAAA,MAAA,CAAqBC,MAAM,CAANA,OAAAA,CAArB,GAAA,EAAA,oBAAA,EAAA,MAAA,CACPA,MAAM,CAANA,OAAAA,CADO,GAAA;AAFL,GADsD;AAO5DC,EAAAA,OAAO,EAAE;AACPF,IAAAA,SAAS,EAAA,mBAAA,MAAA,CAAqBG,OAAO,CAAPA,GAAAA,CAArB,IAAA,EAAA,oBAAA,EAAA,MAAA,CACPF,MAAM,CAANA,OAAAA,CADO,GAAA;AADF,GAPmD;AAY5DG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,SAAS,EAAA,iBAAA,MAAA,CAAmBC,MAAM,CAANA,OAAAA,CAAnB,GAAA,EAAA,oBAAA,EAAA,MAAA,CACPA,MAAM,CAANA,IAAAA,CADO,EAAA,EAAA,cAAA,EAAA,MAAA,CAEMA,MAAM,CAANA,IAAAA,CAFN,GAAA;AADJ,GAZqD;AAiB5DI,EAAAA,QAAQ,EAAE;AACRL,IAAAA,SAAS,EAAA,mBAAA,MAAA,CAAqBC,MAAM,CAANA,OAAAA,CADtB,GACC,CADD;AAERF,IAAAA,eAAe,EAAEE,MAAM,CAANA,OAAAA,CAAeK;AAFxB;AAjBkD,CAAhC,CAA9BT;AAuBA;;;;;;AAKA,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,SAAOV,mBAAmB,CAA1B,SAA0B,CAA1B;AADF,CAAA;AAIA;;;;;;;AAKA,eAAeW,gBAAgB,CAA/B,sBAA+B,CAA/B","sourcesContent":["import { Themer } from '../../../../themer'\nimport memoizeClassName from '../utils/memoizeClassName'\nimport scales from '../foundational-styles/scales'\nimport palette from '../foundational-styles/palette'\n\nconst TagInputAppearances = {}\n\nTagInputAppearances.default = Themer.createTagInputAppearance({\n  base: {\n    backgroundColor: 'white',\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N5A}, inset 0 1px 2px ${\n      scales.neutral.N4A\n    }`\n  },\n  invalid: {\n    boxShadow: `inset 0 0 0 1px ${palette.red.base}, inset 0 1px 2px ${\n      scales.neutral.N4A\n    }`\n  },\n  focus: {\n    boxShadow: `inset 0 0 2px ${scales.neutral.N4A}, inset 0 0 0 1px ${\n      scales.blue.B7\n    }, 0 0 0 3px ${scales.blue.B4A}`\n  },\n  disabled: {\n    boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}`,\n    backgroundColor: scales.neutral.N2\n  }\n})\n\n/**\n * Get the appearance of a `TagInput`.\n * @param {string} appearance - the appearance name\n * @return {Object} the appearance object.\n */\nconst getTextInputAppearance = () => {\n  return TagInputAppearances.default\n}\n\n/**\n * Get the className of a `TagInput`.\n * @param {string} appearance - the appearance name\n * @return {string} the appearance class name.\n */\nexport default memoizeClassName(getTextInputAppearance)\n"]},"metadata":{},"sourceType":"module"}