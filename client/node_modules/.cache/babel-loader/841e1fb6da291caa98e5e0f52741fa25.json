{"ast":null,"code":"import { Themer } from '../../../../themer';\nimport memoizeClassName from '../utils/memoizeClassName';\nimport scales from '../foundational-styles/scales';\nvar Appearances = {};\nAppearances[\"default\"] = Themer.createTableCellAppearance({\n  focus: {\n    outline: 'none',\n    backgroundColor: scales.blue.B2A,\n    boxShadow: \"inset 0 0 0 1px \".concat(scales.blue.B7A)\n  }\n});\n/**\n * Get the appearance of a `TableCell`.\n * @param {string} appearance\n * @return {string} the appearance object.\n */\n\nvar getAppearance = function getAppearance() {\n  return Appearances[\"default\"];\n};\n/**\n * Get the className of a `Table.EditableCell`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\n\n\nexport default memoizeClassName(getAppearance);","map":{"version":3,"sources":["../../../../../src/theme/src/default-theme/component-specific/getTableCellClassName.js"],"names":["Appearances","focus","outline","backgroundColor","scales","boxShadow","getAppearance","memoizeClassName"],"mappings":"AAAA,SAAA,MAAA,QAAA,oBAAA;AACA,OAAA,gBAAA,MAAA,2BAAA;AACA,OAAA,MAAA,MAAA,+BAAA;AAEA,IAAMA,WAAW,GAAjB,EAAA;AAEAA,WAAW,CAAXA,SAAW,CAAXA,GAAsB,MAAM,CAAN,yBAAA,CAAiC;AACrDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EADF,MAAA;AAELC,IAAAA,eAAe,EAAEC,MAAM,CAANA,IAAAA,CAFZ,GAAA;AAGLC,IAAAA,SAAS,EAAA,mBAAA,MAAA,CAAqBD,MAAM,CAANA,IAAAA,CAArB,GAAA;AAHJ;AAD8C,CAAjC,CAAtBJ;AAQA;;;;;;AAKA,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SAAON,WAAW,CAAlB,SAAkB,CAAlB;AADF,CAAA;AAIA;;;;;;;AAKA,eAAeO,gBAAgB,CAA/B,aAA+B,CAA/B","sourcesContent":["import { Themer } from '../../../../themer'\nimport memoizeClassName from '../utils/memoizeClassName'\nimport scales from '../foundational-styles/scales'\n\nconst Appearances = {}\n\nAppearances.default = Themer.createTableCellAppearance({\n  focus: {\n    outline: 'none',\n    backgroundColor: scales.blue.B2A,\n    boxShadow: `inset 0 0 0 1px ${scales.blue.B7A}`\n  }\n})\n\n/**\n * Get the appearance of a `TableCell`.\n * @param {string} appearance\n * @return {string} the appearance object.\n */\nconst getAppearance = () => {\n  return Appearances.default\n}\n\n/**\n * Get the className of a `Table.EditableCell`.\n * @param {string} appearance\n * @return {string} the appearance class name.\n */\nexport default memoizeClassName(getAppearance)\n"]},"metadata":{},"sourceType":"module"}