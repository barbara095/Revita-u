{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport { Text } from '../../typography';\nimport { CaretDownIcon } from '../../icons';\nimport { useTheme } from '../../theme';\nvar Select = memo(forwardRef(function Select(props, ref) {\n  var theme = useTheme();\n\n  var id = props.id,\n      name = props.name,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      children = props.children,\n      defaultValue = props.defaultValue,\n      disabled = props.disabled,\n      onChange = props.onChange,\n      value = props.value,\n      required = props.required,\n      autoFocus = props.autoFocus,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      restProps = _objectWithoutProperties(props, [\"id\", \"name\", \"height\", \"children\", \"defaultValue\", \"disabled\", \"onChange\", \"value\", \"required\", \"autoFocus\", \"isInvalid\", \"appearance\"]);\n\n  var themedClassName = theme.getSelectClassName(appearance);\n  var textSize = theme.getTextSizeForControlHeight(height);\n  var borderRadius = theme.getBorderRadiusForControlHeight(height);\n  var iconSize = theme.getIconSizeForSelect(height);\n  var iconMargin = height >= 36 ? 12 : 8;\n  return React.createElement(Box, _extends({\n    ref: ref,\n    display: \"inline-flex\",\n    flex: 1,\n    position: \"relative\",\n    width: \"auto\",\n    height: height\n  }, restProps), React.createElement(Text, {\n    is: \"select\",\n    className: themedClassName,\n    id: id,\n    name: name,\n    onChange: onChange,\n    defaultValue: defaultValue,\n    value: value,\n    required: required,\n    autoFocus: autoFocus,\n    disabled: disabled,\n    \"aria-invalid\": String(isInvalid),\n    size: textSize,\n    borderRadius: borderRadius,\n    textTransform: \"default\",\n    paddingLeft: Math.round(height / 3.2) // Provide enough space for auto-sizing select including the icon\n    ,\n    paddingRight: iconMargin * 2 + iconSize\n  }, children), React.createElement(CaretDownIcon, {\n    color: \"default\",\n    size: iconSize,\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: -iconSize / 2,\n    right: iconMargin,\n    pointerEvents: \"none\"\n  }));\n}));\nSelect.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, dimensions.propTypes), spacing.propTypes), position.propTypes), layout.propTypes), {}, {\n  /**\n   * The id attribute for the select.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute for the select.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The options that are passed to the select.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The initial value of an uncontrolled select\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Function called when value changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the select.\n   */\n  value: PropTypes.any,\n\n  /**\n   * When true, the select is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, the select should auto focus.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When true, the select is invalid.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the select. The default theme only supports default.\n   */\n  appearance: PropTypes.string\n});\nexport default Select;","map":{"version":3,"sources":["../../../src/select/src/Select.js"],"names":["Select","memo","forwardRef","theme","useTheme","id","name","height","children","defaultValue","disabled","onChange","value","required","autoFocus","isInvalid","appearance","restProps","props","themedClassName","textSize","borderRadius","iconSize","iconMargin","String","Math","dimensions","spacing","position","layout","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { dimensions, spacing, position, layout } from 'ui-box'\nimport { Text } from '../../typography'\nimport { CaretDownIcon } from '../../icons'\nimport { useTheme } from '../../theme'\n\nconst Select = memo(\n  forwardRef(function Select(props, ref) {\n    const theme = useTheme()\n    const {\n      id,\n      name,\n      height = 32,\n      children,\n      defaultValue,\n      disabled,\n      onChange,\n      value,\n      required,\n      autoFocus,\n      isInvalid = false,\n      appearance = 'default',\n      ...restProps\n    } = props\n\n    const themedClassName = theme.getSelectClassName(appearance)\n    const textSize = theme.getTextSizeForControlHeight(height)\n    const borderRadius = theme.getBorderRadiusForControlHeight(height)\n    const iconSize = theme.getIconSizeForSelect(height)\n    const iconMargin = height >= 36 ? 12 : 8\n\n    return (\n      <Box\n        ref={ref}\n        display=\"inline-flex\"\n        flex={1}\n        position=\"relative\"\n        width=\"auto\"\n        height={height}\n        {...restProps}\n      >\n        <Text\n          is=\"select\"\n          className={themedClassName}\n          id={id}\n          name={name}\n          onChange={onChange}\n          defaultValue={defaultValue}\n          value={value}\n          required={required}\n          autoFocus={autoFocus}\n          disabled={disabled}\n          aria-invalid={String(isInvalid)}\n          size={textSize}\n          borderRadius={borderRadius}\n          textTransform=\"default\"\n          paddingLeft={Math.round(height / 3.2)}\n          // Provide enough space for auto-sizing select including the icon\n          paddingRight={iconMargin * 2 + iconSize}\n        >\n          {children}\n        </Text>\n        <CaretDownIcon\n          color=\"default\"\n          size={iconSize}\n          position=\"absolute\"\n          top=\"50%\"\n          marginTop={-iconSize / 2}\n          right={iconMargin}\n          pointerEvents=\"none\"\n        />\n      </Box>\n    )\n  })\n)\n\nSelect.propTypes = {\n  /**\n   * Composes the dimensions spec from the Box primitive.\n   */\n  ...dimensions.propTypes,\n\n  /**\n   * Composes the spacing spec from the Box primitive.\n   */\n  ...spacing.propTypes,\n\n  /**\n   * Composes the position spec from the Box primitive.\n   */\n  ...position.propTypes,\n\n  /**\n   * Composes the layout spec from the Box primitive.\n   */\n  ...layout.propTypes,\n\n  /**\n   * The id attribute for the select.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute for the select.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The options that are passed to the select.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The initial value of an uncontrolled select\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Function called when value changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the select.\n   */\n  value: PropTypes.any,\n\n  /**\n   * When true, the select is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, the select should auto focus.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When true, the select is invalid.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the select. The default theme only supports default.\n   */\n  appearance: PropTypes.string\n}\n\nexport default Select\n"]},"metadata":{},"sourceType":"module"}