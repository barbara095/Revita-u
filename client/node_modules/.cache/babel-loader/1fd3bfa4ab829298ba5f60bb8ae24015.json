{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from 'react';\nvar count = 0;\n/**\n * React hook that always returns an id value that is stable across re-renders\n * @param {string} prefix - a prefix to apply to id\n * @param {string} [explicitId] - an optional explicit value that takes precedence over the generated id\n * @returns {string}\n */\n\nexport function useId(prefix, explicitId) {\n  var _useState = useState(function () {\n    return explicitId || [prefix, ++count].filter(Boolean).join('-');\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      value = _useState2[0];\n\n  return value;\n}","map":{"version":3,"sources":["../../src/hooks/use-id.js"],"names":["count","value","useState","explicitId"],"mappings":";AAAA,SAAA,QAAA,QAAA,OAAA;AAEA,IAAIA,KAAK,GAAT,CAAA;AAEA;;;;;;;AAMA,OAAO,SAAA,KAAA,CAAA,MAAA,EAAA,UAAA,EAAmC;AAAA,MAAA,SAAA,GACxBE,QAAQ,CACtB,YAAA;AAAA,WAAMC,UAAU,IAAI,CAAA,MAAA,EAAS,EAAT,KAAA,EAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAApB,GAAoB,CAApB;AAFsC,GAChB,CADgB;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACjCF,KADiC,GAAA,UAAA,CAAA,CAAA,CAAA;;AAIxC,SAAA,KAAA;AACD","sourcesContent":["import { useState } from 'react'\n\nlet count = 0\n\n/**\n * React hook that always returns an id value that is stable across re-renders\n * @param {string} prefix - a prefix to apply to id\n * @param {string} [explicitId] - an optional explicit value that takes precedence over the generated id\n * @returns {string}\n */\nexport function useId(prefix, explicitId) {\n  const [value] = useState(\n    () => explicitId || [prefix, ++count].filter(Boolean).join('-')\n  )\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}