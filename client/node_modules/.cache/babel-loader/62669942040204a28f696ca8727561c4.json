{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { Text } from '../../typography';\nimport { useTheme } from '../../theme';\nvar CircleIcon = memo(function CircleIcon(_ref) {\n  var size = _ref.size,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"size\", \"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: size,\n    height: size,\n    viewBox: \"0 0 10 10\"\n  }, props), React.createElement(\"circle\", {\n    fill: fill,\n    cx: \"5\",\n    cy: \"5\",\n    r: \"5\"\n  }));\n});\nCircleIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n};\n\nvar noop = function noop() {};\n\nvar Radio = memo(forwardRef(function Radio(props, ref) {\n  var id = props.id,\n      name = props.name,\n      label = props.label,\n      disabled = props.disabled,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      checked = props.checked,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? noop : _props$onChange,\n      value = props.value,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 12 : _props$size,\n      _props$isRequired = props.isRequired,\n      isRequired = _props$isRequired === void 0 ? false : _props$isRequired,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      rest = _objectWithoutProperties(props, [\"id\", \"name\", \"label\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"size\", \"isRequired\", \"appearance\"]);\n\n  var theme = useTheme();\n  var themedClassName = theme.getRadioClassName(appearance);\n  return React.createElement(Box, _extends({\n    is: \"label\",\n    ref: ref,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    position: \"relative\",\n    display: \"flex\",\n    marginY: size === 12 ? 8 : 12\n  }, rest), React.createElement(Box, {\n    is: \"input\",\n    className: themedClassName,\n    id: id,\n    type: \"radio\",\n    name: name,\n    value: value,\n    checked: checked,\n    onChange: onChange,\n    disabled: disabled,\n    \"aria-invalid\": isInvalid,\n    required: isRequired\n  }), React.createElement(Box, {\n    boxSizing: \"border-box\",\n    borderRadius: 9999,\n    display: \"flex\",\n    flex: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 2,\n    width: size,\n    height: size\n  }, React.createElement(CircleIcon, {\n    size: size === 12 ? 4 : 4\n  })), label && React.createElement(Text, {\n    marginLeft: size === 12 ? 8 : 10,\n    size: size === 12 ? 300 : 400,\n    color: disabled ? 'muted' : 'default'\n  }, label));\n}));\nRadio.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, spacing.propTypes), position.propTypes), layout.propTypes), dimensions.propTypes), {}, {\n  /**\n   * The id attribute of the radio.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the radio.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * Function called when state changes\n   * Signature:\n   * ```\n   * function(event: object, checked: boolean) => void\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the radio is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the radio is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The size of the radio circle. This also informs the text size and spacing.\n   */\n  size: PropTypes.oneOf([12, 16]),\n\n  /**\n   * When true, the radio get the required attribute.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n});\nexport default Radio;","map":{"version":3,"sources":["../../../src/radio/src/Radio.js"],"names":["CircleIcon","memo","size","fill","props","PropTypes","number","noop","Radio","forwardRef","id","name","label","disabled","isInvalid","checked","onChange","value","isRequired","appearance","rest","theme","useTheme","themedClassName","spacing","position","layout","dimensions","string"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, position, layout, dimensions } from 'ui-box'\nimport { Text } from '../../typography'\nimport { useTheme } from '../../theme'\n\nconst CircleIcon = memo(function CircleIcon({\n  size,\n  fill = 'currentColor',\n  ...props\n}) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 10 10\" {...props}>\n      <circle fill={fill} cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  )\n})\n\nCircleIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n}\n\nconst noop = () => {}\n\nconst Radio = memo(\n  forwardRef(function Radio(props, ref) {\n    const {\n      id,\n      name,\n      label,\n      disabled,\n      isInvalid = false,\n      checked,\n      onChange = noop,\n      value,\n      size = 12,\n      isRequired = false,\n      appearance = 'default',\n      ...rest\n    } = props\n\n    const theme = useTheme()\n    const themedClassName = theme.getRadioClassName(appearance)\n\n    return (\n      <Box\n        is=\"label\"\n        ref={ref}\n        cursor={disabled ? 'not-allowed' : 'pointer'}\n        position=\"relative\"\n        display=\"flex\"\n        marginY={size === 12 ? 8 : 12}\n        {...rest}\n      >\n        <Box\n          is=\"input\"\n          className={themedClassName}\n          id={id}\n          type=\"radio\"\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange}\n          disabled={disabled}\n          aria-invalid={isInvalid}\n          required={isRequired}\n        />\n        <Box\n          boxSizing=\"border-box\"\n          borderRadius={9999}\n          display=\"flex\"\n          flex=\"none\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          marginTop={2}\n          width={size}\n          height={size}\n        >\n          <CircleIcon size={size === 12 ? 4 : 4} />\n        </Box>\n        {label && (\n          <Text\n            marginLeft={size === 12 ? 8 : 10}\n            size={size === 12 ? 300 : 400}\n            color={disabled ? 'muted' : 'default'}\n          >\n            {label}\n          </Text>\n        )}\n      </Box>\n    )\n  })\n)\n\nRadio.propTypes = {\n  /**\n   * Composes some Box APIs.\n   */\n  ...spacing.propTypes,\n  ...position.propTypes,\n  ...layout.propTypes,\n  ...dimensions.propTypes,\n\n  /**\n   * The id attribute of the radio.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the radio.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * Function called when state changes\n   * Signature:\n   * ```\n   * function(event: object, checked: boolean) => void\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the radio is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the radio is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The size of the radio circle. This also informs the text size and spacing.\n   */\n  size: PropTypes.oneOf([12, 16]),\n\n  /**\n   * When true, the radio get the required attribute.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n}\n\nexport default Radio\n"]},"metadata":{},"sourceType":"module"}