{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ToastManager from './ToastManager';\nvar isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n/**\n * The Toaster manages the interactions between\n * the ToasterManger and the toast API.\n */\n\nvar Toaster = function Toaster() {\n  var _this = this;\n\n  _classCallCheck(this, Toaster);\n\n  _defineProperty(this, \"_bindNotify\", function (handler) {\n    _this.notifyHandler = handler;\n  });\n\n  _defineProperty(this, \"_bindRemove\", function (handler) {\n    _this.removeHandler = handler;\n  });\n\n  _defineProperty(this, \"_bindGetToasts\", function (handler) {\n    _this.getToastsHandler = handler;\n  });\n\n  _defineProperty(this, \"_bindCloseAll\", function (handler) {\n    _this.closeAllHandler = handler;\n  });\n\n  _defineProperty(this, \"getToasts\", function () {\n    return _this.getToastsHandler();\n  });\n\n  _defineProperty(this, \"closeAll\", function () {\n    return _this.closeAllHandler();\n  });\n\n  _defineProperty(this, \"notify\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, _objectSpread(_objectSpread({}, settings), {}, {\n      intent: 'none'\n    }));\n  });\n\n  _defineProperty(this, \"success\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, _objectSpread(_objectSpread({}, settings), {}, {\n      intent: 'success'\n    }));\n  });\n\n  _defineProperty(this, \"warning\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, _objectSpread(_objectSpread({}, settings), {}, {\n      intent: 'warning'\n    }));\n  });\n\n  _defineProperty(this, \"danger\", function (title) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return _this.notifyHandler(title, _objectSpread(_objectSpread({}, settings), {}, {\n      intent: 'danger'\n    }));\n  });\n\n  _defineProperty(this, \"remove\", function (id) {\n    return _this.removeHandler(id);\n  });\n\n  if (!isBrowser) return;\n  var container = document.createElement('div');\n  container.setAttribute('data-evergreen-toaster-container', '');\n  document.body.appendChild(container);\n  ReactDOM.render(React.createElement(ToastManager, {\n    bindNotify: this._bindNotify,\n    bindRemove: this._bindRemove,\n    bindGetToasts: this._bindGetToasts,\n    bindCloseAll: this._bindCloseAll\n  }), container);\n};\n\nexport { Toaster as default };","map":{"version":3,"sources":["../../../src/toaster/src/Toaster.js"],"names":["isBrowser","window","Toaster","container","document","ReactDOM","_bindCloseAll","settings","intent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ToastManager from './ToastManager'\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined'\n\n/**\n * The Toaster manages the interactions between\n * the ToasterManger and the toast API.\n */\nexport default class Toaster {\n  constructor() {\n    if (!isBrowser) return\n\n    const container = document.createElement('div')\n    container.setAttribute('data-evergreen-toaster-container', '')\n    document.body.appendChild(container)\n\n    ReactDOM.render(\n      <ToastManager\n        bindNotify={this._bindNotify}\n        bindRemove={this._bindRemove}\n        bindGetToasts={this._bindGetToasts}\n        bindCloseAll={this._bindCloseAll}\n      />,\n      container\n    )\n  }\n\n  _bindNotify = handler => {\n    this.notifyHandler = handler\n  }\n\n  _bindRemove = handler => {\n    this.removeHandler = handler\n  }\n\n  _bindGetToasts = handler => {\n    this.getToastsHandler = handler\n  }\n\n  _bindCloseAll = handler => {\n    this.closeAllHandler = handler\n  }\n\n  getToasts = () => {\n    return this.getToastsHandler()\n  }\n\n  closeAll = () => {\n    return this.closeAllHandler()\n  }\n\n  notify = (title, settings = {}) => {\n    return this.notifyHandler(title, { ...settings, intent: 'none' })\n  }\n\n  success = (title, settings = {}) => {\n    return this.notifyHandler(title, { ...settings, intent: 'success' })\n  }\n\n  warning = (title, settings = {}) => {\n    return this.notifyHandler(title, { ...settings, intent: 'warning' })\n  }\n\n  danger = (title, settings = {}) => {\n    return this.notifyHandler(title, { ...settings, intent: 'danger' })\n  }\n\n  remove = id => {\n    return this.removeHandler(id)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}