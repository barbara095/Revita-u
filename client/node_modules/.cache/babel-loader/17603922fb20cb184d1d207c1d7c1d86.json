{"ast":null,"code":"import isDev from './isDev';\nvar allowedProperties = ['background', 'backgroundColor', 'backgroundImage', 'borderRadius', 'transition', 'boxShadow', 'opacity', 'color', 'textShadow', 'outline', // Not sure if cursor should be configurable\n'cursor', // Added to prevent pointer events on disabled tab\n'pointerEvents'];\n/**\n * @param {object?} obj - input object that will be filtered against the allowed properties.\n * @return {object} the result will always be a object\n */\n\nfunction createAppearance() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (allowedProperties.includes(key)) {\n      if (typeof obj[key] === 'string' || typeof obj[key] === 'number') {\n        result[key] = obj[key];\n      } else if (isDev) {\n        console.error(\"createAppearance() only accepts strings as properties, key '\".concat(key, \"' with value '\").concat(obj[key], \"' is not a string\"));\n      }\n    } else if (isDev) {\n      console.error(\"key '\".concat(key, \"' is not in the allowed properties for createAppearance():\"), allowedProperties);\n    }\n  });\n  return result;\n}\n\nexport default createAppearance;","map":{"version":3,"sources":["../../../src/themer/src/createAppearance.js"],"names":["allowedProperties","obj","result","Object","console"],"mappings":"AAAA,OAAA,KAAA,MAAA,SAAA;AAEA,IAAMA,iBAAiB,GAAG,CAAA,YAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,YAAA,EAAA,SAAA,EAexB;AAfwB,QAAA,EAkBxB;AAlBF,eAA0B,CAA1B;AAsBA;;;;;AAIA,SAAA,gBAAA,GAAoC;AAAA,MAAVC,GAAU,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAClC,MAAMC,MAAM,GAAZ,EAAA;AAEAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAAyB,UAAA,GAAA,EAAO;AAC9B,QAAIH,iBAAiB,CAAjBA,QAAAA,CAAJ,GAAIA,CAAJ,EAAqC;AACnC,UAAI,OAAOC,GAAG,CAAV,GAAU,CAAV,KAAA,QAAA,IAAgC,OAAOA,GAAG,CAAV,GAAU,CAAV,KAApC,QAAA,EAAkE;AAChEC,QAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,GAAG,CAAjBC,GAAiB,CAAjBA;AADF,OAAA,MAEO,IAAA,KAAA,EAAW;AAChBE,QAAAA,OAAO,CAAPA,KAAAA,CAAAA,+DAAAA,MAAAA,CAAAA,GAAAA,EAAAA,gBAAAA,EAAAA,MAAAA,CACqFH,GAAG,CADxFG,GACwF,CADxFA,EAAAA,mBAAAA,CAAAA;AAGD;AAPH,KAAA,MAQO,IAAA,KAAA,EAAW;AAChBA,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,QAAAA,MAAAA,CAAAA,GAAAA,EAAAA,4DAAAA,CAAAA,EAAAA,iBAAAA;AAID;AAdHD,GAAAA;AAiBA,SAAA,MAAA;AACD;;AAED,eAAA,gBAAA","sourcesContent":["import isDev from './isDev'\n\nconst allowedProperties = [\n  'background',\n  'backgroundColor',\n  'backgroundImage',\n\n  'borderRadius',\n\n  'transition',\n  'boxShadow',\n  'opacity',\n\n  'color',\n  'textShadow',\n\n  'outline',\n  // Not sure if cursor should be configurable\n  'cursor',\n\n  // Added to prevent pointer events on disabled tab\n  'pointerEvents'\n]\n\n/**\n * @param {object?} obj - input object that will be filtered against the allowed properties.\n * @return {object} the result will always be a object\n */\nfunction createAppearance(obj = {}) {\n  const result = {}\n\n  Object.keys(obj).forEach(key => {\n    if (allowedProperties.includes(key)) {\n      if (typeof obj[key] === 'string' || typeof obj[key] === 'number') {\n        result[key] = obj[key]\n      } else if (isDev) {\n        console.error(\n          `createAppearance() only accepts strings as properties, key '${key}' with value '${obj[key]}' is not a string`\n        )\n      }\n    } else if (isDev) {\n      console.error(\n        `key '${key}' is not in the allowed properties for createAppearance():`,\n        allowedProperties\n      )\n    }\n  })\n\n  return result\n}\n\nexport default createAppearance\n"]},"metadata":{},"sourceType":"module"}