{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * Cleans an object of undefined values\n */\n\n\nexport default function removeUndefined() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var obj = _objectSpread({}, input);\n\n  Object.keys(obj).forEach(function (key) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}","map":{"version":3,"sources":["../../src/lib/remove-undefined.js"],"names":["input","obj","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,eAAe,SAAA,eAAA,GAAqC;AAAA,MAAZA,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAClD,MAAMC,GAAG,GAAA,aAAA,CAAA,EAAA,EAAT,KAAS,CAAT;;AAEAC,EAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAAyB,UAAA,GAAA,EAAO;AAC9B,QAAID,GAAG,CAAHA,GAAG,CAAHA,KAAJ,SAAA,EAA4B;AAC1B,aAAOA,GAAG,CAAV,GAAU,CAAV;AACD;AAHHC,GAAAA;AAMA,SAAA,GAAA;AACD","sourcesContent":["/**\n * Cleans an object of undefined values\n */\nexport default function removeUndefined(input = {}) {\n  const obj = { ...input }\n\n  Object.keys(obj).forEach(key => {\n    if (obj[key] === undefined) {\n      delete obj[key]\n    }\n  })\n\n  return obj\n}\n"]},"metadata":{},"sourceType":"module"}