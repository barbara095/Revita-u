{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport createAppearance from './createAppearance';\nimport missingStateWarning from './missingStateWarning';\nvar defaultState = '& + div';\nvar disabledState = '&[disabled] + div';\nvar hoverState = '&:not([disabled]):hover + div';\nvar focusState = '&:not([disabled]):focus + div';\nvar activeState = '&:not([disabled]):active + div';\nvar checkedState = '&:checked + div, &[type=checkbox]:indeterminate + div';\nvar checkedHoverState = '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div';\nvar checkedActiveState = '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div';\nvar checkedDisabledState = '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div';\nvar hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n};\nvar baseStyle = {\n  WebkitFontSmoothing: 'antialiased',\n  textDecoration: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  border: 'none',\n  outline: 'none',\n  cursor: 'pointer'\n};\nvar checkedStyles = {\n  '& > svg': {\n    display: 'block'\n  }\n};\n/**\n * @param {object} items - object with a set of items.\n * @return {object} the final appearance.\n */\n\nvar createCheckboxAppearance = function createCheckboxAppearance() {\n  var _objectSpread2;\n\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  missingStateWarning({\n    items: items,\n    props: ['base', 'hover', 'focus', 'active', 'disabled', 'checked', 'checkedDisabled', 'checkedHover', 'checkedActive'],\n    cb: function cb(prop) {\n      console.error(\"Themer.createCheckboxAppearance() is missing a \".concat(prop, \" state in items:\"), items);\n    }\n  });\n  return _objectSpread(_objectSpread({}, hiddenCheckboxStyle), {}, (_objectSpread2 = {\n    '& + div > svg': {\n      display: 'none'\n    }\n  }, _defineProperty(_objectSpread2, defaultState, _objectSpread(_objectSpread({}, baseStyle), createAppearance(items.base))), _defineProperty(_objectSpread2, hoverState, createAppearance(items.hover)), _defineProperty(_objectSpread2, focusState, createAppearance(items.focus)), _defineProperty(_objectSpread2, activeState, createAppearance(items.active)), _defineProperty(_objectSpread2, disabledState, createAppearance(items.disabled)), _defineProperty(_objectSpread2, checkedState, _objectSpread(_objectSpread({}, checkedStyles), createAppearance(items.checked))), _defineProperty(_objectSpread2, checkedHoverState, _objectSpread(_objectSpread({}, checkedStyles), createAppearance(items.checkedHover))), _defineProperty(_objectSpread2, checkedDisabledState, _objectSpread(_objectSpread({}, checkedStyles), createAppearance(items.checkedDisabled))), _defineProperty(_objectSpread2, checkedActiveState, _objectSpread(_objectSpread({}, checkedStyles), createAppearance(items.checkedActive))), _objectSpread2));\n};\n\nexport default createCheckboxAppearance;","map":{"version":3,"sources":["../../../src/themer/src/createCheckboxAppearance.js"],"names":["defaultState","disabledState","hoverState","focusState","activeState","checkedState","checkedHoverState","checkedActiveState","checkedDisabledState","hiddenCheckboxStyle","border","clip","height","overflow","padding","position","whiteSpace","width","opacity","baseStyle","WebkitFontSmoothing","textDecoration","WebkitAppearance","MozAppearance","outline","cursor","checkedStyles","display","createCheckboxAppearance","items","missingStateWarning","props","cb","console","createAppearance"],"mappings":"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","sourcesContent":["import createAppearance from './createAppearance'\nimport missingStateWarning from './missingStateWarning'\n\nconst defaultState = '& + div'\nconst disabledState = '&[disabled] + div'\nconst hoverState = '&:not([disabled]):hover + div'\nconst focusState = '&:not([disabled]):focus + div'\nconst activeState = '&:not([disabled]):active + div'\nconst checkedState = '&:checked + div, &[type=checkbox]:indeterminate + div'\nconst checkedHoverState =\n  '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div'\nconst checkedActiveState =\n  '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div'\nconst checkedDisabledState =\n  '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div'\n\nconst hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n}\n\nconst baseStyle = {\n  WebkitFontSmoothing: 'antialiased',\n  textDecoration: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  border: 'none',\n  outline: 'none',\n  cursor: 'pointer'\n}\n\nconst checkedStyles = {\n  '& > svg': {\n    display: 'block'\n  }\n}\n\n/**\n * @param {object} items - object with a set of items.\n * @return {object} the final appearance.\n */\nconst createCheckboxAppearance = (items = {}) => {\n  missingStateWarning({\n    items,\n    props: [\n      'base',\n      'hover',\n      'focus',\n      'active',\n      'disabled',\n      'checked',\n      'checkedDisabled',\n      'checkedHover',\n      'checkedActive'\n    ],\n    cb: prop => {\n      console.error(\n        `Themer.createCheckboxAppearance() is missing a ${prop} state in items:`,\n        items\n      )\n    }\n  })\n\n  return {\n    ...hiddenCheckboxStyle,\n    '& + div > svg': { display: 'none' },\n    [defaultState]: { ...baseStyle, ...createAppearance(items.base) },\n    [hoverState]: createAppearance(items.hover),\n    [focusState]: createAppearance(items.focus),\n    [activeState]: createAppearance(items.active),\n    [disabledState]: createAppearance(items.disabled),\n    [checkedState]: { ...checkedStyles, ...createAppearance(items.checked) },\n    [checkedHoverState]: {\n      ...checkedStyles,\n      ...createAppearance(items.checkedHover)\n    },\n    [checkedDisabledState]: {\n      ...checkedStyles,\n      ...createAppearance(items.checkedDisabled)\n    },\n    [checkedActiveState]: {\n      ...checkedStyles,\n      ...createAppearance(items.checkedActive)\n    }\n  }\n}\n\nexport default createCheckboxAppearance\n"]},"metadata":{},"sourceType":"module"}