{"ast":null,"code":"/**\n * Function to help with focus management for selectable table rows.\n * @param {Object} key - React `event.key`.\n * @param {Element} ref - the cell to manage focus interaction for.\n */\nexport default function manageTableRowFocusInteraction(key, ref) {\n  var nextItemToFocus; // eslint-disable-next-line unicorn/prefer-spread\n\n  var tableBodyChildren = Array.from(ref.parentElement.children);\n  var rowIndex = tableBodyChildren.indexOf(ref);\n\n  if (key === 'ArrowUp' && rowIndex - 1 >= 0) {\n    nextItemToFocus = tableBodyChildren[rowIndex - 1];\n  } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {\n    nextItemToFocus = tableBodyChildren[rowIndex + 1];\n  }\n\n  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {\n    nextItemToFocus.focus();\n  }\n}","map":{"version":3,"sources":["../../../src/table/src/manageTableRowFocusInteraction.js"],"names":["tableBodyChildren","Array","ref","rowIndex","key","nextItemToFocus"],"mappings":"AAAA;;;;;AAKA,eAAe,SAAA,8BAAA,CAAA,GAAA,EAAA,GAAA,EAAkD;AAC/D,MAD+D,eAC/D,CAD+D,CAE/D;;AACA,MAAMA,iBAAiB,GAAGC,KAAK,CAALA,IAAAA,CAAWC,GAAG,CAAHA,aAAAA,CAArC,QAA0BD,CAA1B;AACA,MAAME,QAAQ,GAAGH,iBAAiB,CAAjBA,OAAAA,CAAjB,GAAiBA,CAAjB;;AAEA,MAAII,GAAG,KAAHA,SAAAA,IAAqBD,QAAQ,GAARA,CAAAA,IAAzB,CAAA,EAA4C;AAC1CE,IAAAA,eAAe,GAAGL,iBAAiB,CAACG,QAAQ,GAA5CE,CAAmC,CAAnCA;AADF,GAAA,MAEO,IAAID,GAAG,KAAHA,WAAAA,IAAuBD,QAAQ,GAARA,CAAAA,GAAeH,iBAAiB,CAA3D,MAAA,EAAoE;AACzEK,IAAAA,eAAe,GAAGL,iBAAiB,CAACG,QAAQ,GAA5CE,CAAmC,CAAnCA;AACD;;AAED,MAAIA,eAAe,IAAIA,eAAe,CAAfA,YAAAA,CAAvB,UAAuBA,CAAvB,EAAiE;AAC/DA,IAAAA,eAAe,CAAfA,KAAAA;AACD;AACF","sourcesContent":["/**\n * Function to help with focus management for selectable table rows.\n * @param {Object} key - React `event.key`.\n * @param {Element} ref - the cell to manage focus interaction for.\n */\nexport default function manageTableRowFocusInteraction(key, ref) {\n  let nextItemToFocus\n  // eslint-disable-next-line unicorn/prefer-spread\n  const tableBodyChildren = Array.from(ref.parentElement.children)\n  const rowIndex = tableBodyChildren.indexOf(ref)\n\n  if (key === 'ArrowUp' && rowIndex - 1 >= 0) {\n    nextItemToFocus = tableBodyChildren[rowIndex - 1]\n  } else if (key === 'ArrowDown' && rowIndex + 1 < tableBodyChildren.length) {\n    nextItemToFocus = tableBodyChildren[rowIndex + 1]\n  }\n\n  if (nextItemToFocus && nextItemToFocus.hasAttribute('tabindex')) {\n    nextItemToFocus.focus()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}