{"ast":null,"code":"import { css } from 'glamor';\nimport scales from '../foundational-styles/scales';\nimport colors from '../foundational-styles/colors';\n\nvar getTrimStyle = function getTrimStyle(intent) {\n  return {\n    '&:before': {\n      content: '\"\"',\n      width: 3,\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      backgroundColor: colors.intent[intent]\n    }\n  };\n};\n/**\n * Get the themed props for the Alert component.\n * @param {Object} props\n * @param {string} props.appearance - default theme supports `default` and `card`.\n * @param {Intent} props.intent - intent of the alert. May be `none`.\n * @param {boolean} props.hasTrim - when true, the alert has a trim.\n * @return {Object} { className, ...themedProps }\n */\n\n\nvar getAlertProps = function getAlertProps(_ref) {\n  var appearance = _ref.appearance,\n      intent = _ref.intent,\n      hasTrim = _ref.hasTrim;\n  var trimClassName = hasTrim ? css(getTrimStyle(intent)).toString() : '';\n\n  switch (appearance) {\n    case 'card':\n      return {\n        elevation: 1,\n        borderRadius: 3,\n        className: trimClassName\n      };\n\n    case 'default':\n    default:\n      return {\n        boxShadow: \"inset 0 0 0 1px \".concat(scales.neutral.N4A),\n        className: trimClassName\n      };\n  }\n};\n\nexport default getAlertProps;","map":{"version":3,"sources":["../../../../../src/theme/src/default-theme/component-specific/getAlertProps.js"],"names":["getTrimStyle","content","width","height","position","top","left","backgroundColor","colors","getAlertProps","appearance","intent","hasTrim","trimClassName","css","elevation","borderRadius","className","boxShadow","scales"],"mappings":"AAAA,SAAA,GAAA,QAAA,QAAA;AACA,OAAA,MAAA,MAAA,+BAAA;AACA,OAAA,MAAA,MAAA,+BAAA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,MAAA,EAAM;AAAA,SAAK;AAC9B,gBAAY;AACVC,MAAAA,OAAO,EADG,IAAA;AAEVC,MAAAA,KAAK,EAFK,CAAA;AAGVC,MAAAA,MAAM,EAHI,MAAA;AAIVC,MAAAA,QAAQ,EAJE,UAAA;AAKVC,MAAAA,GAAG,EALO,CAAA;AAMVC,MAAAA,IAAI,EANM,CAAA;AAOVC,MAAAA,eAAe,EAAEC,MAAM,CAANA,MAAAA,CAAAA,MAAAA;AAPP;AADkB,GAAL;AAA3B,CAAA;AAYA;;;;;;;;;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAqC;AAAA,MAAlCC,UAAkC,GAAA,IAAA,CAAlCA,UAAkC;AAAA,MAAtBC,MAAsB,GAAA,IAAA,CAAtBA,MAAsB;AAAA,MAAdC,OAAc,GAAA,IAAA,CAAdA,OAAc;AACzD,MAAMC,aAAa,GAAGD,OAAO,GAAGE,GAAG,CAACd,YAAY,CAAhBc,MAAgB,CAAb,CAAHA,CAAH,QAAGA,EAAH,GAA7B,EAAA;;AAEA,UAAA,UAAA;AACE,SAAA,MAAA;AACE,aAAO;AAAEC,QAAAA,SAAS,EAAX,CAAA;AAAgBC,QAAAA,YAAY,EAA5B,CAAA;AAAiCC,QAAAA,SAAS,EAAEJ;AAA5C,OAAP;;AACF,SAAA,SAAA;AACA;AACE,aAAO;AACLK,QAAAA,SAAS,EAAA,mBAAA,MAAA,CAAqBC,MAAM,CAANA,OAAAA,CADzB,GACI,CADJ;AAELF,QAAAA,SAAS,EAAEJ;AAFN,OAAP;AALJ;AAHF,CAAA;;AAeA,eAAA,aAAA","sourcesContent":["import { css } from 'glamor'\nimport scales from '../foundational-styles/scales'\nimport colors from '../foundational-styles/colors'\n\nconst getTrimStyle = intent => ({\n  '&:before': {\n    content: '\"\"',\n    width: 3,\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    backgroundColor: colors.intent[intent]\n  }\n})\n\n/**\n * Get the themed props for the Alert component.\n * @param {Object} props\n * @param {string} props.appearance - default theme supports `default` and `card`.\n * @param {Intent} props.intent - intent of the alert. May be `none`.\n * @param {boolean} props.hasTrim - when true, the alert has a trim.\n * @return {Object} { className, ...themedProps }\n */\nconst getAlertProps = ({ appearance, intent, hasTrim }) => {\n  const trimClassName = hasTrim ? css(getTrimStyle(intent)).toString() : ''\n\n  switch (appearance) {\n    case 'card':\n      return { elevation: 1, borderRadius: 3, className: trimClassName }\n    case 'default':\n    default:\n      return {\n        boxShadow: `inset 0 0 0 1px ${scales.neutral.N4A}`,\n        className: trimClassName\n      }\n  }\n}\n\nexport default getAlertProps\n"]},"metadata":{},"sourceType":"module"}