{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport { css as glamorCss } from 'glamor';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useTheme } from '../../theme';\nvar StringAndBoolPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.bool]);\nvar emptyObject = {};\nvar Pane = memo(forwardRef(function Pane(props, ref) {\n  var background = props.background,\n      elevation = props.elevation,\n      hoverElevation = props.hoverElevation,\n      activeElevation = props.activeElevation,\n      border = props.border,\n      borderTop = props.borderTop,\n      borderRight = props.borderRight,\n      borderBottom = props.borderBottom,\n      borderLeft = props.borderLeft,\n      _props$css = props.css,\n      css = _props$css === void 0 ? emptyObject : _props$css,\n      restProps = _objectWithoutProperties(props, [\"background\", \"elevation\", \"hoverElevation\", \"activeElevation\", \"border\", \"borderTop\", \"borderRight\", \"borderBottom\", \"borderLeft\", \"css\"]);\n\n  var theme = useTheme();\n\n  function getHoverElevationStyle(hoverElevation, css) {\n    if (!Number.isInteger(hoverElevation)) return {};\n    return {\n      transitionDuration: '150ms',\n      transitionProperty: 'box-shadow, transform',\n      transitionTimingFunction: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n      ':hover': _objectSpread(_objectSpread({}, css[':hover'] || {}), {}, {\n        transform: 'translateY(-2px)',\n        boxShadow: theme.getElevation(hoverElevation)\n      })\n    };\n  }\n\n  function getActiveElevationStyle(activeElevation, css) {\n    if (!Number.isInteger(activeElevation)) return {};\n    return {\n      ':active': _objectSpread(_objectSpread({}, css[':active'] || {}), {}, {\n        transform: 'translateY(-1px)',\n        boxShadow: theme.getElevation(activeElevation)\n      })\n    };\n  }\n\n  function getBorderSideProperty(_ref) {\n    var borderSideProperty = _ref.borderSideProperty,\n        border = _ref.border;\n\n    if (Object.prototype.hasOwnProperty.call(theme.colors.border, borderSideProperty)) {\n      return \"1px solid \".concat(theme.colors.border[borderSideProperty]);\n    }\n\n    if (borderSideProperty === true) {\n      return \"1px solid \".concat(theme.colors.border[\"default\"]);\n    }\n\n    if (borderSideProperty === false) {\n      return null;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(theme.colors.border, border)) {\n      return \"1px solid \".concat(theme.colors.border[border]);\n    }\n\n    if (border === true) {\n      return \"1px solid \".concat(theme.colors.border[\"default\"]);\n    }\n\n    return borderSideProperty;\n  }\n\n  var elevationStyle = theme.getElevation(elevation);\n  var hoverElevationStyle = getHoverElevationStyle(hoverElevation, css);\n  var activeElevationStyle = getActiveElevationStyle(activeElevation, css);\n\n  var _map = [borderTop, borderRight, borderBottom, borderLeft].map(function (borderSideProperty) {\n    return getBorderSideProperty({\n      borderSideProperty: borderSideProperty,\n      border: border\n    });\n  }),\n      _map2 = _slicedToArray(_map, 4),\n      _borderTop = _map2[0],\n      _borderRight = _map2[1],\n      _borderBottom = _map2[2],\n      _borderLeft = _map2[3];\n\n  var className = cx(props.className, glamorCss(_objectSpread(_objectSpread(_objectSpread({}, css), hoverElevationStyle), activeElevationStyle)).toString());\n  return React.createElement(Box, _extends({\n    ref: ref,\n    borderTop: _borderTop,\n    borderRight: _borderRight,\n    borderBottom: _borderBottom,\n    borderLeft: _borderLeft,\n    boxShadow: elevationStyle,\n    background: theme.getBackground(background)\n  }, restProps, {\n    className: className\n  }));\n}));\nPane.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {\n  /**\n   * Background property.\n   * `tint1`, `tint2` etc. from `theme.colors.background` are available.\n   */\n  background: PropTypes.string,\n\n  /**\n   * Elevation of the Pane.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  elevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on hover. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  hoverElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on click. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  activeElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, muted, default.\n   */\n  border: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderTop: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderRight: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderBottom: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderLeft: StringAndBoolPropType\n});\nexport default Pane;","map":{"version":3,"sources":["../../../src/layers/src/Pane.js"],"names":["css","StringAndBoolPropType","PropTypes","emptyObject","Pane","memo","forwardRef","background","elevation","hoverElevation","activeElevation","border","borderTop","borderRight","borderBottom","borderLeft","restProps","props","theme","useTheme","Number","transitionDuration","transitionProperty","transitionTimingFunction","transform","boxShadow","borderSideProperty","Object","elevationStyle","hoverElevationStyle","getHoverElevationStyle","activeElevationStyle","getActiveElevationStyle","_borderTop","_borderRight","_borderBottom","_borderLeft","getBorderSideProperty","className","cx","glamorCss","Box"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport { css as glamorCss } from 'glamor'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useTheme } from '../../theme'\n\nconst StringAndBoolPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool\n])\n\nconst emptyObject = {}\n\nconst Pane = memo(\n  forwardRef(function Pane(props, ref) {\n    const {\n      background,\n\n      elevation,\n      hoverElevation,\n      activeElevation,\n\n      border,\n      borderTop,\n      borderRight,\n      borderBottom,\n      borderLeft,\n\n      css = emptyObject,\n      ...restProps\n    } = props\n    const theme = useTheme()\n\n    function getHoverElevationStyle(hoverElevation, css) {\n      if (!Number.isInteger(hoverElevation)) return {}\n\n      return {\n        transitionDuration: '150ms',\n        transitionProperty: 'box-shadow, transform',\n        transitionTimingFunction: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n        ':hover': {\n          ...(css[':hover'] || {}),\n          transform: 'translateY(-2px)',\n          boxShadow: theme.getElevation(hoverElevation)\n        }\n      }\n    }\n\n    function getActiveElevationStyle(activeElevation, css) {\n      if (!Number.isInteger(activeElevation)) return {}\n\n      return {\n        ':active': {\n          ...(css[':active'] || {}),\n          transform: 'translateY(-1px)',\n          boxShadow: theme.getElevation(activeElevation)\n        }\n      }\n    }\n\n    function getBorderSideProperty({ borderSideProperty, border }) {\n      if (\n        Object.prototype.hasOwnProperty.call(\n          theme.colors.border,\n          borderSideProperty\n        )\n      ) {\n        return `1px solid ${theme.colors.border[borderSideProperty]}`\n      }\n\n      if (borderSideProperty === true) {\n        return `1px solid ${theme.colors.border.default}`\n      }\n\n      if (borderSideProperty === false) {\n        return null\n      }\n\n      if (Object.prototype.hasOwnProperty.call(theme.colors.border, border)) {\n        return `1px solid ${theme.colors.border[border]}`\n      }\n\n      if (border === true) {\n        return `1px solid ${theme.colors.border.default}`\n      }\n\n      return borderSideProperty\n    }\n\n    const elevationStyle = theme.getElevation(elevation)\n    const hoverElevationStyle = getHoverElevationStyle(hoverElevation, css)\n    const activeElevationStyle = getActiveElevationStyle(activeElevation, css)\n\n    const [_borderTop, _borderRight, _borderBottom, _borderLeft] = [\n      borderTop,\n      borderRight,\n      borderBottom,\n      borderLeft\n    ].map(borderSideProperty =>\n      getBorderSideProperty({ borderSideProperty, border })\n    )\n\n    const className = cx(\n      props.className,\n      glamorCss({\n        ...css,\n        ...hoverElevationStyle,\n        ...activeElevationStyle\n      }).toString()\n    )\n\n    return (\n      <Box\n        ref={ref}\n        borderTop={_borderTop}\n        borderRight={_borderRight}\n        borderBottom={_borderBottom}\n        borderLeft={_borderLeft}\n        boxShadow={elevationStyle}\n        background={theme.getBackground(background)}\n        {...restProps}\n        className={className}\n      />\n    )\n  })\n)\n\nPane.propTypes = {\n  /**\n   * Composes the Box component as the base.\n   */\n  ...Box.propTypes,\n\n  /**\n   * Background property.\n   * `tint1`, `tint2` etc. from `theme.colors.background` are available.\n   */\n  background: PropTypes.string,\n\n  /**\n   * Elevation of the Pane.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  elevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on hover. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  hoverElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on click. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  activeElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, muted, default.\n   */\n  border: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderTop: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderRight: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderBottom: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderLeft: StringAndBoolPropType\n}\n\nexport default Pane\n"]},"metadata":{},"sourceType":"module"}