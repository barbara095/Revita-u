{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Paragraph } from '../../typography';\nimport { useTheme } from '../../theme';\nvar TooltipStateless = memo(forwardRef(function TooltipStateless(props, ref) {\n  var theme = useTheme();\n\n  var children = props.children,\n      appearance = props.appearance,\n      restProps = _objectWithoutProperties(props, [\"children\", \"appearance\"]);\n\n  var _theme$getTooltipProp = theme.getTooltipProps(appearance),\n      color = _theme$getTooltipProp.color,\n      themedProps = _objectWithoutProperties(_theme$getTooltipProp, [\"color\"]);\n\n  var child;\n\n  if (typeof children === 'string') {\n    child = React.createElement(Paragraph, {\n      color: color,\n      size: 400\n    }, children);\n  } else {\n    child = children;\n  }\n\n  return React.createElement(Pane, _extends({\n    ref: ref,\n    borderRadius: 3,\n    paddingX: 8,\n    paddingY: 4,\n    maxWidth: 240\n  }, themedProps, restProps), child);\n}));\nTooltipStateless.propTypes = {\n  children: PropTypes.node,\n\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']).isRequired\n};\nexport default TooltipStateless;","map":{"version":3,"sources":["../../../src/tooltip/src/TooltipStateless.js"],"names":["TooltipStateless","memo","forwardRef","theme","useTheme","children","appearance","restProps","props","color","themedProps","child","PropTypes","isRequired"],"mappings":";;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,SAAA,QAAA,kBAAA;AACA,SAAA,QAAA,QAAA,aAAA;AAEA,IAAMA,gBAAgB,GAAGC,IAAI,CAC3BC,UAAU,CAAC,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAAsC;AAC/C,MAAMC,KAAK,GAAGC,QAAd,EAAA;;AAD+C,MAEvCC,QAFuC,GAEAG,KAFA,CAAA,QAAA;AAAA,MAE7BF,UAF6B,GAEAE,KAFA,CAAA,UAAA;AAAA,MAEdD,SAFc,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,CAAA;;AAAA,MAAA,qBAAA,GAGbJ,KAAK,CAALA,eAAAA,CAHa,UAGbA,CAHa;AAAA,MAGvCM,KAHuC,GAAA,qBAAA,CAAA,KAAA;AAAA,MAG7BC,WAH6B,GAAA,wBAAA,CAAA,qBAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAK/C,MAAA,KAAA;;AACA,MAAI,OAAA,QAAA,KAAJ,QAAA,EAAkC;AAChCC,IAAAA,KAAK,GACH,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,MAAA,KAAK,EAAhB,KAAA;AAAyB,MAAA,IAAI,EAAE;AAA/B,KAAA,EADFA,QACE,CADFA;AADF,GAAA,MAMO;AACLA,IAAAA,KAAK,GAALA,QAAAA;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,YAAY,EAFd,CAAA;AAGE,IAAA,QAAQ,EAHV,CAAA;AAIE,IAAA,QAAQ,EAJV,CAAA;AAKE,IAAA,QAAQ,EAAE;AALZ,GAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EADF,KACE,CADF;AAjBJ,CACY,CADiB,CAA7B;AAiCAX,gBAAgB,CAAhBA,SAAAA,GAA6B;AAC3BK,EAAAA,QAAQ,EAAEO,SAAS,CADQ,IAAA;;AAG3B;;;AAGAN,EAAAA,UAAU,EAAEM,SAAS,CAATA,KAAAA,CAAgB,CAAA,SAAA,EAAhBA,MAAgB,CAAhBA,EAAqCC;AANtB,CAA7Bb;AASA,eAAA,gBAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { Paragraph } from '../../typography'\nimport { useTheme } from '../../theme'\n\nconst TooltipStateless = memo(\n  forwardRef(function TooltipStateless(props, ref) {\n    const theme = useTheme()\n    const { children, appearance, ...restProps } = props\n    const { color, ...themedProps } = theme.getTooltipProps(appearance)\n\n    let child\n    if (typeof children === 'string') {\n      child = (\n        <Paragraph color={color} size={400}>\n          {children}\n        </Paragraph>\n      )\n    } else {\n      child = children\n    }\n\n    return (\n      <Pane\n        ref={ref}\n        borderRadius={3}\n        paddingX={8}\n        paddingY={4}\n        maxWidth={240}\n        {...themedProps}\n        {...restProps}\n      >\n        {child}\n      </Pane>\n    )\n  })\n)\n\nTooltipStateless.propTypes = {\n  children: PropTypes.node,\n\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']).isRequired\n}\n\nexport default TooltipStateless\n"]},"metadata":{},"sourceType":"module"}