{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Pane } from '../../layers';\nvar TableBody = memo(forwardRef(function TableBody(props, ref) {\n  var children = props.children,\n      rest = _objectWithoutProperties(props, [\"children\"]);\n\n  return React.createElement(Pane, _extends({\n    ref: ref,\n    \"data-evergreen-table-body\": true,\n    flex: \"1\",\n    overflowY: \"auto\"\n  }, rest), children);\n}));\nTableBody.propTypes = _objectSpread({}, Pane.propTypes);\nexport default TableBody;","map":{"version":3,"sources":["../../../src/table/src/TableBody.js"],"names":["TableBody","memo","forwardRef","children","rest","props","Pane"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,IAAA,QAAA,cAAA;AAEA,IAAMA,SAAS,GAAGC,IAAI,CACpBC,UAAU,CAAC,SAAA,SAAA,CAAA,KAAA,EAAA,GAAA,EAA+B;AAAA,MAChCC,QADgC,GACVE,KADU,CAAA,QAAA;AAAA,MACnBD,IADmB,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAGxC,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,iCAFF,IAAA;AAGE,IAAA,IAAI,EAHN,GAAA;AAIE,IAAA,SAAS,EAAC;AAJZ,GAAA,EAAA,IAAA,CAAA,EADF,QACE,CADF;AAJJ,CACY,CADU,CAAtB;AAkBAJ,SAAS,CAATA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EAIKM,IAAI,CAJTN,SAAAA,CAAAA;AAOA,eAAA,SAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport { Pane } from '../../layers'\n\nconst TableBody = memo(\n  forwardRef(function TableBody(props, ref) {\n    const { children, ...rest } = props\n\n    return (\n      <Pane\n        ref={ref}\n        data-evergreen-table-body\n        flex=\"1\"\n        overflowY=\"auto\"\n        {...rest}\n      >\n        {children}\n      </Pane>\n    )\n  })\n)\n\nTableBody.propTypes = {\n  /**\n   * Composes the Pane component as the base.\n   */\n  ...Pane.propTypes\n}\n\nexport default TableBody\n"]},"metadata":{},"sourceType":"module"}