{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport React, { forwardRef, memo } from 'react';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\nimport { useTheme } from '../../theme';\nimport { Text } from '../../typography';\nvar styles = {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n};\n\nvar noop = function noop() {};\n\nvar Tab = memo(forwardRef(function Tab(props, ref) {\n  var theme = useTheme();\n\n  var appearance = props.appearance,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 28 : _props$height,\n      _props$is = props.is,\n      is = _props$is === void 0 ? 'span' : _props$is,\n      isSelected = props.isSelected,\n      _props$onKeyPress = props.onKeyPress,\n      onKeyPress = _props$onKeyPress === void 0 ? noop : _props$onKeyPress,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      className = props.className,\n      rest = _objectWithoutProperties(props, [\"appearance\", \"disabled\", \"height\", \"is\", \"isSelected\", \"onKeyPress\", \"onSelect\", \"className\"]);\n\n  var handleClick = function handleClick(e) {\n    safeInvoke(props.onClick, e);\n    onSelect();\n  };\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === 'Enter' || e.key === ' ') {\n      onSelect();\n      e.preventDefault();\n    }\n\n    onKeyPress(e);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(typeof props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');\n  }\n\n  var textSize = theme.getTextSizeForControlHeight(height);\n  var elementBasedProps;\n\n  if (disabled) {\n    elementBasedProps = {\n      'aria-disabled': true\n    };\n  }\n\n  if (is === 'a') {\n    // Use aria-current when it's a link\n    // https://tink.uk/using-the-aria-current-attribute/\n    elementBasedProps = isSelected ? _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-current': 'page'\n    }) : {};\n  } else {\n    // Use a role=\"tablist\" around the tabs\n    // Also pass down a aria-controls=\"panelId\"\n    // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n    elementBasedProps = _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-selected': isSelected,\n      role: 'tab'\n    });\n  }\n\n  var classNames = cx(theme.getTabClassName(appearance), className);\n  return React.createElement(Text, _extends({\n    className: classNames,\n    is: is,\n    size: textSize,\n    height: height,\n    ref: ref\n  }, styles, rest, {\n    onClick: handleClick,\n    onKeyPress: handleKeyPress\n  }, elementBasedProps));\n}));\nTab.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n});\nexport default Tab;","map":{"version":3,"sources":["../../../src/tabs/src/Tab.js"],"names":["styles","display","fontWeight","paddingX","marginX","borderRadius","lineHeight","alignItems","justifyContent","textDecoration","tabIndex","noop","Tab","memo","forwardRef","theme","useTheme","appearance","disabled","height","is","isSelected","onKeyPress","onSelect","className","rest","props","handleClick","safeInvoke","handleKeyPress","e","process","warning","textSize","elementBasedProps","role","classNames","cx","ref","Text","PropTypes","string"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport React, { forwardRef, memo } from 'react'\nimport safeInvoke from '../../lib/safe-invoke'\nimport warning from '../../lib/warning'\nimport { useTheme } from '../../theme'\nimport { Text } from '../../typography'\n\nconst styles = {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n}\n\nconst noop = () => {}\n\nconst Tab = memo(\n  forwardRef(function Tab(props, ref) {\n    const theme = useTheme()\n\n    const {\n      appearance,\n      disabled = false,\n      height = 28,\n      is = 'span',\n      isSelected,\n      onKeyPress = noop,\n      onSelect = noop,\n      className,\n      ...rest\n    } = props\n\n    const handleClick = e => {\n      safeInvoke(props.onClick, e)\n      onSelect()\n    }\n\n    const handleKeyPress = e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onSelect()\n        e.preventDefault()\n      }\n\n      onKeyPress(e)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        typeof props.onClick === 'function',\n        '<Tab> expects `onSelect` prop, but you passed `onClick`.'\n      )\n    }\n\n    const textSize = theme.getTextSizeForControlHeight(height)\n\n    let elementBasedProps\n    if (disabled) {\n      elementBasedProps = {\n        'aria-disabled': true\n      }\n    }\n\n    if (is === 'a') {\n      // Use aria-current when it's a link\n      // https://tink.uk/using-the-aria-current-attribute/\n      elementBasedProps = isSelected\n        ? {\n            ...elementBasedProps,\n            'aria-current': 'page'\n          }\n        : {}\n    } else {\n      // Use a role=\"tablist\" around the tabs\n      // Also pass down a aria-controls=\"panelId\"\n      // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n      elementBasedProps = {\n        ...elementBasedProps,\n        'aria-selected': isSelected,\n        role: 'tab'\n      }\n    }\n\n    const classNames = cx(theme.getTabClassName(appearance), className)\n\n    return (\n      <Text\n        className={classNames}\n        is={is}\n        size={textSize}\n        height={height}\n        ref={ref}\n        {...styles}\n        {...rest}\n        onClick={handleClick}\n        onKeyPress={handleKeyPress}\n        {...elementBasedProps}\n      />\n    )\n  })\n)\n\nTab.propTypes = {\n  /**\n   * Composes the Text component as the base.\n   */\n  ...Text.propTypes,\n\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Tab\n"]},"metadata":{},"sourceType":"module"}